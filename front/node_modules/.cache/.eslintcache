[{"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\index.js":"1","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\App.js":"3","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\theme.js":"4","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\index.js":"5","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\Fomulaire\\Formulaire.js":"6","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\user.js":"7","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\LandingPage\\landingPage.jsx":"8","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\Fomulaire\\newInput.js":"9","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\Fomulaire\\styles.js":"10","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\footer\\Footer.js":"11","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\BarreDeRecherche\\BarreRecherche.js":"12","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\downloadMobile\\DownloadMobile.js":"13","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\BarreDeRecherche\\Search.js":"14","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\downloadMobile\\ButtonDownload.js":"15","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\Carouselle.js":"16","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaire\\SectionPartenaires.js":"17","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\chatBot\\ChatBot.js":"18","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\actions\\user.js":"19","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\nosService\\allServices.js":"20","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\newBarreMenu\\shinBarreMenu.js":"21","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\chatBot\\actionProvider.js":"22","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaire\\informations.js":"23","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaire\\Partenaire.js":"24","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\chatBot\\messageParser.js":"25","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\api.js":"26","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\nosService\\service.js":"27","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\nosService\\informations.js":"28","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\newBarreMenu\\BoutonSignUp.js":"29","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\newBarreMenu\\shinMenu.js":"30","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\chatBot\\view\\config.js":"31","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\chatBot\\ChatDocs.js":"32","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\adminPage\\CreateCmd.js":"33","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\auth\\login.js":"34","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\utils\\notification\\notification.js":"35","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\authReducer.js":"36","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\actions\\index.js":"37","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\store.js":"38","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\actions\\authAction.js":"39","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\auth\\register.js":"40","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\utils\\validation\\Validation.js":"41","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\auth\\ActivationCompte.js":"42","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\tokenReducer.js":"43","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\utils\\notFound\\NotFound.js":"44","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\auth\\forgotPassword.js":"45","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\auth\\ResetPassword.js":"46","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\profile\\Profile.js":"47","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\actions\\usersAction.js":"48","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\usersReducer.js":"49","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\profile\\EditUser.js":"50","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\SideMenu\\SideMenuAdmin.js":"51","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\SideMenu\\MenuItem.js":"52","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\test\\TestMenu.js":"53","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaires\\Restaurants.js":"54","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaires\\partenaires.js":"55","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaires\\patisseries.js":"56","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\dashborad\\dashborad.js":"57","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\adminPage\\HeaderSideBarre.js":"58","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\profile\\UpdateProfile\\updateProfile.js":"59","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\profile\\InfoScreen\\Info-profile.js":"60","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\restaurantsReducer.js":"61","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\actions\\restaurantsAction.js":"62"},{"size":1152,"mtime":1631607581211,"results":"63","hashOfConfig":"64"},{"size":375,"mtime":1629190714689,"results":"65","hashOfConfig":"64"},{"size":3005,"mtime":1632932314270,"results":"66","hashOfConfig":"64"},{"size":364,"mtime":1629190714683,"results":"67","hashOfConfig":"64"},{"size":383,"mtime":1633264294075,"results":"68","hashOfConfig":"64"},{"size":8545,"mtime":1631606665468,"results":"69","hashOfConfig":"64"},{"size":828,"mtime":1631606327457,"results":"70","hashOfConfig":"64"},{"size":1728,"mtime":1632839413945,"results":"71","hashOfConfig":"64"},{"size":1763,"mtime":1629190714661,"results":"72","hashOfConfig":"64"},{"size":5430,"mtime":1631449593277,"results":"73","hashOfConfig":"64"},{"size":1798,"mtime":1629190714672,"results":"74","hashOfConfig":"64"},{"size":2401,"mtime":1629190714657,"results":"75","hashOfConfig":"64"},{"size":4138,"mtime":1629190714670,"results":"76","hashOfConfig":"64"},{"size":1782,"mtime":1629190714658,"results":"77","hashOfConfig":"64"},{"size":1296,"mtime":1629190714670,"results":"78","hashOfConfig":"64"},{"size":3674,"mtime":1629190714659,"results":"79","hashOfConfig":"64"},{"size":1973,"mtime":1629190714681,"results":"80","hashOfConfig":"64"},{"size":3322,"mtime":1632650247549,"results":"81","hashOfConfig":"64"},{"size":1598,"mtime":1631606327457,"results":"82","hashOfConfig":"64"},{"size":1711,"mtime":1629190714678,"results":"83","hashOfConfig":"64"},{"size":7804,"mtime":1633012166033,"results":"84","hashOfConfig":"64"},{"size":1061,"mtime":1629190714666,"results":"85","hashOfConfig":"64"},{"size":1204,"mtime":1629190714682,"results":"86","hashOfConfig":"64"},{"size":2505,"mtime":1629190714681,"results":"87","hashOfConfig":"64"},{"size":406,"mtime":1629190714667,"results":"88","hashOfConfig":"64"},{"size":304,"mtime":1629192676985,"results":"89","hashOfConfig":"64"},{"size":2015,"mtime":1629190714680,"results":"90","hashOfConfig":"64"},{"size":556,"mtime":1629190714679,"results":"91","hashOfConfig":"64"},{"size":2607,"mtime":1631621623051,"results":"92","hashOfConfig":"64"},{"size":6731,"mtime":1632839486241,"results":"93","hashOfConfig":"64"},{"size":345,"mtime":1629190714668,"results":"94","hashOfConfig":"64"},{"size":424,"mtime":1629190714665,"results":"95","hashOfConfig":"64"},{"size":1629,"mtime":1630346230440,"results":"96","hashOfConfig":"64"},{"size":2888,"mtime":1631623649479,"results":"97","hashOfConfig":"64"},{"size":244,"mtime":1631457659668,"results":"98","hashOfConfig":"64"},{"size":602,"mtime":1631624483773,"results":"99","hashOfConfig":"64"},{"size":207,"mtime":1633010554028,"results":"100","hashOfConfig":"64"},{"size":439,"mtime":1631607334994,"results":"101","hashOfConfig":"64"},{"size":697,"mtime":1632657985474,"results":"102","hashOfConfig":"64"},{"size":4358,"mtime":1632668231794,"results":"103","hashOfConfig":"64"},{"size":847,"mtime":1631609356902,"results":"104","hashOfConfig":"64"},{"size":1273,"mtime":1631619669646,"results":"105","hashOfConfig":"64"},{"size":285,"mtime":1631624590249,"results":"106","hashOfConfig":"64"},{"size":265,"mtime":1632334778605,"results":"107","hashOfConfig":"64"},{"size":1752,"mtime":1632327906473,"results":"108","hashOfConfig":"64"},{"size":2270,"mtime":1633280349425,"results":"109","hashOfConfig":"64"},{"size":6235,"mtime":1632930832644,"results":"110","hashOfConfig":"64"},{"size":394,"mtime":1632662035252,"results":"111","hashOfConfig":"64"},{"size":288,"mtime":1632661628779,"results":"112","hashOfConfig":"64"},{"size":3102,"mtime":1632665947052,"results":"113","hashOfConfig":"64"},{"size":5644,"mtime":1633265427414,"results":"114","hashOfConfig":"64"},{"size":1377,"mtime":1633265443461,"results":"115","hashOfConfig":"64"},{"size":209,"mtime":1632827958814,"results":"116","hashOfConfig":"64"},{"size":11649,"mtime":1633359746856,"results":"117","hashOfConfig":"64"},{"size":165,"mtime":1632829073339,"results":"118","hashOfConfig":"64"},{"size":165,"mtime":1632829058197,"results":"119","hashOfConfig":"64"},{"size":1466,"mtime":1632929788005,"results":"120","hashOfConfig":"64"},{"size":2152,"mtime":1632930075973,"results":"121","hashOfConfig":"64"},{"size":7021,"mtime":1632931771724,"results":"122","hashOfConfig":"64"},{"size":7345,"mtime":1632997170362,"results":"123","hashOfConfig":"64"},{"size":318,"mtime":1633011913792,"results":"124","hashOfConfig":"64"},{"size":419,"mtime":1633011821814,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"1aq6cyh",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"128"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"128"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"128"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"128"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"128"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"128"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"128"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"128"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"128"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"128"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"128"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"128"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"128"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"128"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"128"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"128"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\index.js",[],["274","275"],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\App.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\theme.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\index.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\Fomulaire\\Formulaire.js",["276","277","278","279","280","281","282","283","284","285","286","287"],"import { Button, Typography } from \"@material-ui/core\";\r\nimport React, { useState , useEffect} from \"react\";\r\nimport { useDispatch ,useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { inscrireAction, authentifierAction } from \"../../redux/actions/user\";\r\nimport useStyles from \"./styles\";\r\nimport NewInput from \"./newInput\";\r\n\r\n//const photoUrl = process.env.PUBLIC_URL + \"images/register.svg\";\r\nconst initialForm = { fullName: \"\", telephone: \"\", motDePasse: \"\" };\r\n\r\n//variables\r\nvar telOk = false;\r\nvar nomOk = false;\r\nvar mdpOk = false;\r\nvar confirmMdpOk = false;\r\nvar telError = false;\r\nvar nomError = false;\r\nvar mdpError = false;\r\n\r\n////REGEX ///\r\n\r\nconst passwordRegex = /^(?=.*\\d)([a-zA-Z\\d]{8,})$/; //\r\nconst nameRegex = /^([a-zA-Z]+[ ]?|[a-zA-Z]+['-]?[])+$/;\r\nconst numRegex = /(0|\\+213)[5-7]([0-9]{2}){4}$/;\r\n\r\nconst helperTel = \"le numero doit etre composé de 10 chiffre\";\r\nconst helperName = \"require un nom valide\";\r\nconst helperMdp = \"exemple de mot de passe valide :145Badios# \";\r\nconst helperConfirmPassword = \"mot de passe different\";\r\n\r\nconst Formulaire = () => {\r\n  //styles\r\n  const classes = useStyles();\r\n\r\n  //react -redux\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector( state => state)\r\n \r\n  //react router\r\n  const history = useHistory();\r\n\r\n  //states\r\n  const [informations, setInformations] = useState(initialForm);\r\n  const [confirmMdpError, setConfirmMdpError] = useState(false);\r\n  const [errorServer , setErrorServer] = useState(false) ; \r\n  const [slideClass, setSlideClass] = useState(null);\r\n  const [seConnecter, setSeconnecter] = useState(true); // false ==> inscrire\r\n  const [mdpConfirmation, setMdpConfirmation] = useState(\"\");\r\n\r\n  useEffect(()=>{\r\n      setErrorServer(false)\r\n  },[seConnecter])\r\n\r\n\r\n  // functions\r\n  const handelChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"fullName\":\r\n        {\r\n          {\r\n            if (e.target.value === \"\") {\r\n              nomError = false;\r\n              nomOk = false;\r\n            } else if (nameRegex.test(e.target.value)) {\r\n              nomError = false;\r\n              nomOk = true;\r\n            } else {\r\n              nomError = true;\r\n              nomOk = false;\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case \"telephone\":\r\n        {\r\n          if (e.target.value === \"\") {\r\n            telError = false;\r\n            telOk = false;\r\n          } else if (numRegex.test(e.target.value)) {\r\n            telError = false;\r\n            telOk = true;\r\n          } else {\r\n            telError = true;\r\n            telOk = false;\r\n          }\r\n        }\r\n        break;\r\n      case \"motDePasse\":\r\n        {\r\n          if (e.target.value === \"\") {\r\n            mdpError = false;\r\n            mdpOk = false;\r\n          } else if (passwordRegex.test(e.target.value)) {\r\n            mdpError = false;\r\n            mdpOk = true;\r\n          } else {\r\n            mdpError = true;\r\n            mdpOk = false;\r\n          }\r\n        }\r\n        break;\r\n      case \"confirmedPassword\":\r\n        {\r\n          {\r\n            setMdpConfirmation(e.target.value);\r\n            if (e.target.value === \"\") {\r\n              confirmMdpOk = false;\r\n              setConfirmMdpError(false);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (seConnecter) {\r\n      nomOk = true;\r\n    }\r\n    setInformations({ ...informations, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (seConnecter) {\r\n      confirmMdpOk = true;\r\n    } else {\r\n      if (informations.motDePasse === mdpConfirmation) {\r\n        confirmMdpOk = true;\r\n        setConfirmMdpError(false);\r\n      } else {\r\n        confirmMdpOk = false;\r\n        setConfirmMdpError(true);\r\n      }\r\n    }\r\n\r\n    let result = telOk && nomOk && mdpOk && confirmMdpOk;\r\n\r\n    // if (result) {\r\n    //   setErrorServer(true)\r\n    //   if (seConnecter) {\r\n    //     dispatch(\r\n    //       authentifierAction(\r\n    //         {\r\n    //           telephone: informations.telephone,\r\n    //           motDePasse: informations.motDePasse,\r\n    //         },\r\n    //         history\r\n    //       )\r\n    //     );\r\n    //   } else {\r\n    //     dispatch(\r\n    //       inscrireAction({ ...informations, dateCreation: new Date() }, history)\r\n    //     );\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  const handelClassChanges = () => {\r\n    if (slideClass === null) {\r\n      setSlideClass(classes.sliderAnimatedLeftToRight);\r\n    } else {\r\n      if (slideClass === classes.sliderAnimatedRightToLeft) {\r\n        setSlideClass(classes.sliderAnimatedLeftToRight);\r\n      } else {\r\n        setSlideClass(classes.sliderAnimatedRightToLeft);\r\n      }\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setSeconnecter(!seConnecter);\r\n    }, 750);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container} id=\"container\">\r\n      <div className={`${classes.slider} ${slideClass}`}>\r\n        <div className={classes.slideText}>\r\n          <h2> {seConnecter ? \"Bienvenue\" : \"Comment vas-tu\"}</h2>\r\n          <p className={classes.TextP} >\r\n            {seConnecter\r\n              ? \"venez avec nous en enfer et cree un compte \"\r\n              : \"vous etes deja inscrit , alors connectez vous \"}\r\n          </p>\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={handelClassChanges}\r\n          className={classes.bouton}\r\n        >\r\n          {seConnecter ? \"inscription\" : \"connexion\"}\r\n        </Button>\r\n      </div>\r\n      <div className={classes.insciptionPart}>\r\n        <Typography className={classes.titreInscrption}>\r\n          {seConnecter ? \"connectez-vous\" : \"Inscrivez-vous\"}\r\n        </Typography>\r\n        <form className={classes.inscForm} onSubmit={handelSubmit}>\r\n          <div\r\n            className={\r\n              seConnecter ? classes.InputsdivAuth : classes.InputdivInsc\r\n            }\r\n          >\r\n            {!seConnecter && (\r\n              <NewInput\r\n                name=\"fullName\"\r\n                label=\"   full Name\"\r\n                handelChange={handelChange}\r\n                type=\"text\"\r\n                error={nomError}\r\n                //  helperText={nomError ?  helperName : null}\r\n                helperText={helperName}\r\n              />\r\n            )}\r\n            <NewInput\r\n              name=\"telephone\"\r\n              label=\"   Email\"\r\n              handelChange={handelChange}\r\n              type=\"text\"\r\n              error={telError}\r\n              //  helperText={telError ? helperTel : null}\r\n              helperText={helperTel}\r\n            />\r\n            <div className={classes.forgotPassword}>\r\n              <NewInput\r\n                name=\"motDePasse\"\r\n                label=\"   Mot de passe \"\r\n                handelChange={handelChange}\r\n                error={mdpError}\r\n                type=\"password\"\r\n                //  helperText={mdpError ?  helperMdp : null}\r\n                helperText={helperMdp}\r\n              />\r\n\r\n              {seConnecter && (\r\n                <button\r\n                  type=\"button\"\r\n                  variant=\"text\"\r\n                  style={{\r\n                    fontSize: \"11\",\r\n                    color: \"black\",\r\n                    background: \"#fff\",\r\n                    marginTop: \"5px\",\r\n                    padding: 5,\r\n                    borderRadius: \"8px\",\r\n                    transform: \"translateY(5px)\",\r\n                 \r\n               \r\n                  }}\r\n                >\r\n                  mot de passe oublié\r\n                </button>\r\n              )}\r\n            </div>\r\n            {!seConnecter && (\r\n              <div className={classes.confirmMdp}>\r\n                <NewInput\r\n                  name=\"confirmedPassword\"\r\n                  label=\"   Confirmation mot de passe\"\r\n                  type=\"password\"\r\n                  handelChange={handelChange}\r\n                  error={confirmMdpError}\r\n                  // helperText={confirmMdpError ? helperConfirmPassword : null}\r\n                  helperText={helperConfirmPassword}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <Button variant=\"contained\" className={classes.bouton} type=\"submit\">\r\n            Envoyer\r\n          </Button>\r\n        </form>\r\n         \r\n         { errorServer ? \r\n         <p style={{color:'red'}}>{ selector.userReducer.erreur}</p>\r\n         : null\r\n         }\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Formulaire;\r\n// devlopor\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\user.js",["288"],"const userReducer = (state = { authData: null }, action) => {\r\n  switch (action.type) {\r\n\r\n    case \"AUTH_ERROR\":{\r\n         \r\n      console.log(\"Action\",action)  ; \r\n      return {...state,erreur : action?.payload }\r\n         \r\n    } ; \r\n\r\n\r\n    case \"AUTH\": {\r\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action?.payload }));\r\n      return { ...state, authData: action?.payload, erreur :'' };\r\n    }\r\n\r\n    case \"INSCRIRE\": {\r\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action?.payload }));\r\n      return { ...state, authData: action?.payload , erreur:''};\r\n    }\r\n\r\n   \r\n    case \"LOGOUT\": {\r\n      localStorage.clear();\r\n      return state;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n",["289","290"],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\LandingPage\\landingPage.jsx",["291","292","293","294","295"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ChatBot from \"../chatBot/ChatBot\";\r\nimport Carouselle from \"../Carouselle\";\r\nimport ShinBarreMenu from \"../newBarreMenu/shinBarreMenu\";\r\nimport AllServices from \"../nosService/allServices\";\r\nimport SectionPartenaires from \"../partenaire/SectionPartenaires\";\r\nimport DownloadMobile from \"../downloadMobile/DownloadMobile\";\r\nimport BarreDeRecherche from \"../BarreDeRecherche/BarreRecherche\";\r\nimport Footer from \"../footer/Footer\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport SideMenu from \"../SideMenu/SideMenuAdmin\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    barre: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"center\",\r\n      margin: \"auto\",\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      left: 0,\r\n\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minWidth: 350,\r\n        width: \"100%\",\r\n      },\r\n\r\n      [theme.breakpoints.only(\"sm\")]: {\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nfunction LandingPage() {\r\n  const auth = useSelector(state => state.auth)\r\n  const { user, isLogged, isAdmin } = auth\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ minWidth: 350 }}>\r\n      <ChatBot />\r\n      <div className={classes.carousel}>\r\n        <Carouselle />\r\n\r\n        <div className={classes.barre}>\r\n          {\" \"}\r\n          <BarreDeRecherche />{\" \"}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"App\">\r\n      <ShinBarreMenu />\r\n        <AllServices />\r\n        <SectionPartenaires />\r\n\r\n        <DownloadMobile />\r\n        <Footer />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\Fomulaire\\newInput.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\Fomulaire\\styles.js",["296"],"import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst slideWidthLeft = 360;\r\nconst slideWidthright = 540;\r\n\r\nconst slideheight = 550;\r\nconst widthContainer = 350;\r\n\r\n//const backColor=\"linear-gradient(45deg ,#054225 30% , #055211 90%)\"; \r\nconst backColor='linear-gradient(45deg ,#f00000 30% , #dc281e 90%)'\r\n// const backColor ='linear-gradient(45deg , #e1eec3 30% ,#f05053 90% )'\r\n// const backColor ='linear-gradient(45deg , #f53803 30% ,#f5d020 90% )'  ; \r\n// const backColor ='linear-gradient(45deg , #010101 30% ,#000111 90% )'  ; \r\nconst autherColor ='linear-gradient(45deg , #f5f7fa 30% ,#b8c6db 90% )'  ; \r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  /// ANIMATION WITH KEY FRAMES SA MERE ETT OUI FRERE  C'EST CA LE VIE\r\n  \"@global\": {\r\n    \"@keyframes widthAnimation1\": {\r\n      \"0%\": { width: slideWidthLeft },\r\n      \"50%\": { width: slideWidthLeft + slideWidthright },\r\n      \"100%\": { width: slideWidthLeft },\r\n    },\r\n\r\n    \"@keyframes widthAnimation2\": {\r\n      \"0%\": { width: slideWidthLeft },\r\n      \"50%\": { width: slideWidthLeft + slideWidthright },\r\n      \"100%\": { width: slideWidthLeft },\r\n    },\r\n\r\n    \"@keyframes heightAnimation1\": {\r\n      \"0%\": { height: 100 },\r\n      \"50%\": { height: slideheight },\r\n      \"100%\": { height: 100 },\r\n    },\r\n    \"@keyframes heightAnimation2\": {\r\n      \"0%\": { height: 100 },\r\n      \"50%\": { height: slideheight },\r\n      \"100%\": { height: 100 },\r\n    },\r\n  },\r\n\r\n  container: {\r\n    height: 550, minHeight:'550' , \r\n    width: 900,\r\n    margin: \"auto\",\r\n    marginTop:50,\r\n    padding: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    backgroundColor: '#f1f1f1',\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: slideheight, //500\r\n      width: widthContainer,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  slider: {\r\n    height:550 ,\r\n    width: slideWidthLeft,\r\n    position: \"absolute\",\r\n    zIndex: 100,\r\n    background: backColor,\r\n    display: \"flex\",\r\n    flexDirection: \"column-reverse\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 100,\r\n      width: widthContainer,\r\n    },\r\n  },\r\n  sliderAnimatedLeftToRight: {\r\n    // atilit the right\r\n    background: backColor,\r\n    animation: `widthAnimation1 2.5s ${theme.transitions.easing.easeInOut} forwards `,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      animation: `heightAnimation1 2s ${theme.transitions.easing.easeInOut} forwards `,\r\n    },\r\n  },\r\n\r\n  sliderAnimatedRightToLeft: {\r\n    // atilit a gaucher\r\n    background: backColor,\r\n    animation: `widthAnimation2 2.5s ${theme.transitions.easing.easeInOut}  forwards`,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      animation: `heightAnimation2 2s ${theme.transitions.easing.easeInOut} forwards `,\r\n    },\r\n  },\r\n  slideText: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  TextP:{\r\n    margin:10\r\n  },\r\n///////////////////////////////////////\r\n\r\n  insciptionPart: {\r\n    width: slideWidthright,\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginLeft: slideWidthLeft,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: slideheight-100, // 100 de marginTop\r\n      width: widthContainer,\r\n      marginLeft: 0,\r\n      marginTop: 100,\r\n    },\r\n  },\r\n\r\n  \r\n  titreInscrption:{\r\n    fontSize:50 ,  \r\n    fontWeight:\"500\" , \r\n    color:'#000' , \r\n    [theme.breakpoints.down('sm')]:{\r\n      fontSize:35 , \r\n      transform:'translateY(-0%)' , \r\n      marginBottom:5 , \r\n    },\r\n    marginBottom:15 , \r\n  }\r\n  ,bouton: {\r\n    margin: \"auto\",\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    height: 50,\r\n    width: 140,\r\n    borderRadius: 20,\r\n    background: backColor ,  // \"linear-gradient(45deg ,#054225 30% , #055211 90%)\",\r\n    [theme.breakpoints.down('sm')]:{\r\n      marginTop: 0,\r\n      marginBottom: 5,\r\n    } ,\r\n \r\n  },\r\n\r\n\r\nInputsdivAuth:{\r\n        display:'flex' , \r\n        flexDirection:'column' , \r\n        justifyContent:'space-around' , \r\n        height:190 ,\r\n        transform:'TranslateY(40px)' ,  \r\n  }\r\n\r\n\r\n  ,InputdivInsc:{\r\n     transform:'TranslateY(20px)' ,  \r\n     display:'flex' , \r\n     flexDirection:'column' , \r\n     justifyContent:'space-between' , \r\n     height:280 ,\r\n\r\n    [theme.breakpoints.down('sm')]:{\r\n      // height:300,\r\n      // display:'flex' , \r\n      // flexDirection:'column' , \r\n      // justifyContent:'space-between' , \r\n      // marginBottom:'15px', \r\n      flexDirection:'column ' , \r\n      marginBottom :'20px' , \r\n      transform:'TranslateY(25px)' , \r\n      justifyContent:'space-between' , \r\n\r\n    }\r\n  }\r\n  ,forgotPassword:{ // pour bien positionner le textField password \r\n  \r\n    [theme.breakpoints.down('sm')]:{\r\n      transform:'TranslateY(-30px)' ,\r\n      marginTop:35 , \r\n    }\r\n  } \r\n\r\n   , \r\n  inscForm: {\r\n    width: \"90%\",\r\n    height: \"80%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]:{\r\n      marginTop:'10px' , \r\n      height:'75%' ,  // good choice\r\n     \r\n    }\r\n  },\r\n  confirmMdp:{\r\n    [theme.breakpoints.down('sm')]:{\r\n     transform:'translateY(-25px)' , \r\n    }\r\n  }\r\n\r\n}));\r\n\r\nexport default useStyles;\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\footer\\Footer.js",["297","298","299","300","301","302","303","304"],"import React from 'react'\r\nimport './Footer.css'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nexport default function Footer() {\r\n  return (\r\n  \r\n  \r\n    <div className=\"footer-distributed\">\r\n    \r\n    <div className=\"footer-left\">\r\n    \r\n        <h3>BigNova<span>Deliv</span></h3>\r\n        \r\n        <li><a href=\"#\">A propos</a></li>\r\n        <li><a href=\"#\">Blog</a></li>\r\n        <li><a href=\"#\">Nous rejoindre</a></li>\r\n        \r\n        \r\n    </div>\r\n    \r\n    \r\n    \r\n      \r\n      \r\n \r\n\r\n\r\n    <div className=\"footer-center\">\r\n    \r\n    <div>\r\n    <i className=\"fa fa-map-marker\"></i>\r\n    <p><span>Sidi Ahmed</span> Bejaia, Algerie</p>\r\n    </div>\r\n    \r\n    <div>\r\n    <i className=\"fa fa-phone\"></i>\r\n    <p>+213 782205066</p>\r\n    </div>\r\n    \r\n    <div>\r\n    <i className=\"fa fa-envelope\"></i>\r\n    <p><a href=\"mailto:support@company.com\">contact@bignovacompany.com</a></p>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    <div className=\"footer-right\">\r\n    \r\n    <p className=\"footer-company-about\">\r\n    <span>A propos de l'entreprise</span>\r\n    Lorem ipsum dolor sit amet consectetur adipisicing. &amp; Delivery.\r\n    </p>\r\n    \r\n    <div className=\"footer-icons\">\r\n    \r\n      <a href=\"#\"><i className=\"fab fa-facebook\"></i></a>\r\n      <a href=\"#\"><i className=\"fab fa-twitter\"></i></a>\r\n      <a href=\"#\"><i className=\"fab fa-linkedin\"></i></a>\r\n      <a href=\"#\"><i className=\"fab fa-youtube\"></i></a>\r\n      \r\n    </div>\r\n    \r\n    </div>\r\n   <hr style={{backgroundColor:\"tomato\"}}/>\r\n    <div className=\"col-md-8 col-sm-6 col-xs-12\">\r\n            <p className=\"copyright-text\">Copyright &copy; 2021 tous les droits de  \r\n         <a href=\"#\" style={{color:\"black\"}}> BigNova Deliv</a> .\r\n            </p>\r\n          </div>\r\n    \r\n    </div>\r\n\r\n\r\n        \r\n\r\n       \r\n    \r\n  )\r\n}\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\BarreDeRecherche\\BarreRecherche.js",["305","306"],"import { makeStyles, Button, Select, MenuItem } from \"@material-ui/core\";\r\n\r\nimport { useState } from \"react\";\r\nimport \"./barreRecherche.css\";\r\nimport Search from \"./Search\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    container: {\r\n      margin: 5,\r\n      width: 800,\r\n      zIndex: 1,\r\n      // backgroundColor:\"#fff\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        width: \"100%\",\r\n        height: \"auto\" /**40 */,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n        zIndex: 1,\r\n      },\r\n    },\r\n    icons: {\r\n      backgroundColor: \"#fff\",\r\n      width: 30,\r\n      height: 60,\r\n    },\r\n    select: {\r\n      width: 180,\r\n      height: 60,\r\n      margin: 10,\r\n      paddingLeft: 10,\r\n      backgroundColor: \"#fff\",\r\n\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    bouton: {\r\n      height: 62,\r\n      width: 150,\r\n      backgroundColor: \"black !important\",\r\n      color: \"white\",\r\n      textTransform: \"none\",\r\n      fontSize: \"18px \",\r\n\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        marginTop: 20,\r\n      },\r\n    },\r\n    menuItem: {\r\n      backgroundColor: \"#784512 \",\r\n    },\r\n  };\r\n});\r\n\r\nfunction BarreDeRecherche({ onChangeValue, valeur }) {\r\n  const [selectValue, setSelectValue] = useState(1);\r\n  const [val, setVal] = useState(\"\");\r\n\r\n  const updateItem = (e) => {\r\n    let val = e.target.value;\r\n    setSelectValue(val);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <form className={classes.container}>\r\n        <Search\r\n          divClassName=\"recherche\"\r\n          inputClassName=\"input\"\r\n          clearClassName=\"clear\"\r\n        />\r\n\r\n        <Select\r\n          value={selectValue}\r\n          onChange={updateItem}\r\n          className={classes.select}\r\n          style={{color:'black' }}\r\n        >\r\n          <MenuItem value=\"1\" style={{ backgroundColor: \"#fff\" }}>\r\n            Livrer Maintenant\r\n          </MenuItem>\r\n          <MenuItem value=\"2\" style={{ backgroundColor: \"#fff\" }}>\r\n          \r\n            Planifier Apres\r\n          </MenuItem>\r\n        </Select>\r\n      \r\n\r\n        <Button className={classes.bouton}>Order now</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarreDeRecherche;\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\downloadMobile\\DownloadMobile.js",["307"]," \r\n import {Paper ,makeStyles ,Grid } from '@material-ui/core' ; \r\n\r\nimport ButtonDownload from './ButtonDownload'\r\n\r\n const urlFond=process.env.PUBLIC_URL+'/images/elegant.jpg' ; \r\n const google =process.env.PUBLIC_URL+'/images/icons/google-play.png' ; \r\n const apple =process.env.PUBLIC_URL+'/images/icons/apple.jpg' ; \r\n\r\n const useStyles =makeStyles(theme=>{\r\n     return {\r\n\r\ncontainer:{\r\n    height:'auto' ,\r\n    minHeight:'700px',\r\n    background: 'linear-gradient(45deg, #757F9A 30%, #D7DDE8 90%)',\r\n\r\n    display:'flex' , \r\n    width:\"100%\", \r\n    paddingTop:' 150px' ,  \r\n    paddingBottom :50 ,\r\n   \r\n    [theme.breakpoints.down('sm')]:{\r\n        display:'flex' , \r\n        flexDirection:'row',\r\n\r\n        background: 'linear-gradient(45deg, #757F9A 30%, #D7DDE8 90%)',\r\n        height:'auto',\r\n        minHeight:'500px',\r\n        paddingTop:' 50px' ,  \r\n\r\n\r\n        \r\n    }\r\n\r\n} , \r\ngauche:{\r\n    marginTop : 5 , marginBottom : 5,     \r\n    paddgin :10 , \r\n    textAlign :\"center\" ,\r\n    display:'flex' , \r\n    flexDirection :'column' , \r\n    justifyContent:'flex-start' , \r\n    alignItems :'center' ,\r\n    [theme.breakpoints.only('sm')]:{\r\n   \r\n    }\r\n} ,\r\ndroite :{\r\n    marginTop : 5 , marginBottom : 5,\r\n    paddgin :10 ,\r\n    display:'flex' , \r\n    flexDirection:'row' , \r\n    justifyContent :'space-evenly',\r\n    [theme.breakpoints.only('sm')]:{\r\n         maxWidth :'30vh'  ,\r\n         marginLeft :'9%'\r\n     }\r\n\r\n\r\n} ,\r\nimage :{\r\n    width:180, \r\n    height:340, \r\n    \r\n} ,\r\nimage1 :{\r\n    background :'#201545' ,\r\n   \r\n    transform:'translateY(0%)' ,\r\n    '&:hover':{\r\n        animation:'animateCard1 .5s linear' ,\r\n        transform:'translateY(0%) scale(1.1)' , \r\n    } ,\r\n    animation:'animateCard1Exit .2s linear' ,\r\n\r\n},\r\nimage2 :{\r\n    background :'#365248' ,\r\n    \r\n    transform: 'translateY(10%)',\r\n    '&:hover':{\r\n        animation:'animateCard2 .5s linear' ,\r\n\r\n        transform:'translateY(5%) scale(1.1)' ,\r\n    } , \r\n    animation:'animateCard2Exit .2s linear' ,\r\n    [theme.breakpoints.down('sm')]:{\r\n        display:'none'\r\n    }\r\n},\r\n  '@global':{\r\n        \r\n    \"@keyframes animateCard1\":{\r\n        '0%' :{ transform:'translateY(0%) scale(1)' ,} ,\r\n        '100%' :{ transform:'translateY(0%) scale(1.1)' } , \r\n    }\r\n    ,\r\n    \"@keyframes animateCard1Exit\":{\r\n        '0%' :{ transform:'translateY(0%) scale(1.1)' ,} ,\r\n        '100%' :{ transform:'translateY(0%) scale(1)' } , \r\n    } ,\r\n    /****************************************************** */\r\n    \"@keyframes animateCard2\":{\r\n        '0%' :{ transform:'translateY(10%) scale(1)' ,} ,\r\n        '100%' :{ transform:'translateY(5%) scale(1.1)' } , \r\n    }\r\n    ,\r\n    \"@keyframes animateCard2Exit\":{\r\n        '0%' :{ transform:'translateY(5%) scale(1.1)' ,} ,\r\n        '100%' :{ transform:'translateY(10%) scale(1)' } , \r\n    } ,\r\n    /****************************************************** */\r\n\r\n   \r\n\r\n\r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\n }) ;\r\n\r\nconst DownloadMobile =()=>{\r\n\r\n    const classes=useStyles() ;\r\n\r\n\r\n    return (\r\n         <Grid container className={classes.container}>\r\n           \r\n           <Grid item className={classes.gauche} sm={6} md={6} xs={12} lg={6}  > \r\n           <h2> Telechargez notre application mobile  </h2>\r\n\r\n           <div className={classes.sectionMobile}>\r\n              \r\n                <p style={{color:'black'}}> elle est disponible sur : </p>\r\n               <div style={{display:'flex' , flexDirection:'column' }}>\r\n                    <ButtonDownload icon={google} text='Get it on'  titre='Google Play'/>\r\n                    <ButtonDownload icon={apple} text='Get it on'  titre='Apple Store'/>\r\n                </div>\r\n           </div>\r\n\r\n           <div>\r\n\r\n           </div>\r\n \r\n\r\n           </Grid>\r\n           <Grid item className={classes.droite}  sm={false} md={6} xs={12} lg={6} > \r\n\r\n         <Paper className={`${classes.image} ${classes.image1}`} elevation={5}>\r\n\r\n         </Paper> \r\n         <Paper className={`${classes.image} ${classes.image2}`}  elevation={5}>\r\n\r\n          </Paper >\r\n          </Grid>           \r\n\r\n\r\n         </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default DownloadMobile  ; ","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\BarreDeRecherche\\Search.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\downloadMobile\\ButtonDownload.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\Carouselle.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaire\\SectionPartenaires.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\chatBot\\ChatBot.js",["308","309","310"],"import Chatbot from 'react-chatbot-kit';\r\nimport config from './view/config';\r\nimport ActionProvider from './actionProvider';\r\nimport MessageParser from './messageParser';\r\nimport React, { useState } from 'react';\r\nimport { makeStyles, Button, IconButton, Paper, Icon, Fade } from '@material-ui/core';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n\r\n    return {\r\n\r\n        chat: {\r\n            width: 275, //275\r\n            height: 500,\r\n            backgroundColor: '#ae7419',\r\n\r\n            position: 'fixed',\r\n            bottom: 80, right: 65,\r\n\r\n            zIndex: 15,\r\n\r\n\r\n\r\n\r\n        },\r\n        button: {\r\n            backgroundColor: '#e32929',\r\n            position: 'fixed',\r\n            bottom: 0, right: 0,\r\n            margin: 10, zIndex: 15,\r\n\r\n            '&:hover': { backgroundColor: '#e32929', }\r\n        },\r\n        divBtn: {\r\n            borderRadius: 10,\r\n            alignSelf: \"flex-end\",\r\n\r\n        }, icons: {\r\n            color: '#fff',\r\n\r\n        }\r\n    }\r\n})\r\nconst ChatBot = ({ }) => {\r\n    const classes = useStyles();\r\n    const [visible, setVisibile] = useState(false);\r\n    const scroller = () => {\r\n        if (window.pageYOffset > 150) { setVisibile(true); }\r\n        else { setVisibile(false); }\r\n    }\r\n\r\n    window.addEventListener('scroll', scroller);\r\n    const [open, setOpen] = useState(false);\r\n    const [displayContainer, setDisplay] = useState('none');\r\n    const [animate, setAnimate] = useState(false);\r\n    const handelClick = () => {\r\n\r\n        setAnimate(true)\r\n        setOpen(true);\r\n        setDisplay('block')\r\n    }\r\n\r\n    const handelClose = () => {\r\n        setTimeout(() => {\r\n            setOpen(false)\r\n        }, 150);\r\n        setAnimate(false);\r\n        setDisplay('none')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n\r\n            <div className={classes.chat} style={{ display: `${displayContainer}` }}>\r\n                {open &&\r\n                    <Fade in={animate}>\r\n                        <Paper elevation={5}>\r\n                            <Chatbot\r\n                                config={config}\r\n                                messageParser={MessageParser}\r\n                                actionProvider={ActionProvider}\r\n                            />\r\n                        </Paper>\r\n                    </Fade>\r\n                }\r\n            </div>\r\n\r\n\r\n            {visible && (\r\n                <Fade in={visible} >\r\n                    <div className={classes.divBtn}>\r\n\r\n\r\n\r\n\r\n                        {open ? (\r\n\r\n                            <IconButton variant='contained' color=\"secondary\" onClick={handelClose} className={classes.button}>\r\n                                <CancelRoundedIcon fontSize='large' className={classes.icons} />\r\n                            </IconButton>) :\r\n\r\n\r\n\r\n\r\n                            (<IconButton className={classes.button} onClick={handelClick}>\r\n                                <ChatIcon fontSize='large' className={classes.icons} />\r\n                            </IconButton>)\r\n\r\n                        }\r\n\r\n\r\n                    </div>\r\n                </Fade>\r\n            )}\r\n\r\n\r\n\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ChatBot","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\actions\\user.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\nosService\\allServices.js",["311"],"import Service   from \"./service\";\r\nimport { Paper,makeStyles, Container } from \"@material-ui/core\";\r\nimport Infservices from './informations'\r\n\r\nconst useStyles =makeStyles(theme=>{\r\n  return{\r\n\r\n   container:{\r\n    width: '100%',\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent:'space-evenly',\r\n    minHeight:'50vh' , \r\n    height:'auto' ,\r\n    minHeight :'700px',\r\n  \r\n    background: 'linear-gradient(45deg, #6190e8 30%, #a7bfe8 90%)',\r\n    \r\n[theme.breakpoints.up('lg')]:{\r\n  paddingTop:100 , \r\n  paddingBottom :100  , \r\n}  , \r\n[theme.breakpoints.down('sm')]:{\r\n  paddingTop:30 , \r\n     paddingBottom :30  , \r\n}\r\n\r\n     },\r\n\r\n\r\n    allservices:{\r\n     width: '100%',\r\n     display: \"flex\",\r\n     flexDirection: \"row\",\r\n     justifyContent:'space-evenly',\r\n     height:'auto' ,\r\n     paddingTop :15 , paddingBottom :10 ,\r\n     [theme.breakpoints.only('md')]:{\r\n      width: '75%',\r\n      display: \"flex\",\r\n     flexDirection: \"row\", \r\n     flexWrap:'wrap' , \r\n     } ,\r\n     [theme.breakpoints.down('sm')]:{\r\n       \r\n      display: \"flex\",\r\n     flexDirection: \"column\", \r\n     \r\n     }\r\n     \r\n    }\r\n    }\r\n\r\n})\r\n\r\nconst AllServices=()=>{\r\n\r\n    const classes= useStyles() ; \r\n    \r\n   \r\n\r\n\r\nreturn (\r\n  <Paper className={classes.container} >\r\n  <div>\r\n    <h3>Nos services </h3>\r\n    <p> Big nova deliv vous offre plusieurs services de livaraison a vous d'en profiter</p>\r\n    </div>\r\n    <Container className={classes.allservices}>\r\n    \r\n      {\r\n        Infservices.map((element)=><Service key={element.id} information={element} />)\r\n      }\r\n    </Container>\r\n\r\n<p> d'autre service seront prochainement disponible </p>\r\n    </Paper>\r\n) ;\r\n}\r\nexport default AllServices ; \r\n\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\newBarreMenu\\shinBarreMenu.js",["312","313","314","315","316","317","318","319","320","321"],"import BoutonSignUp from \"../newBarreMenu/BoutonSignUp\";\r\nimport \"./menu.css\";\r\nimport Search from \"../BarreDeRecherche/Search\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  useMediaQuery,\r\n  Collapse,\r\n  makeStyles,\r\n  Toolbar,\r\n  Avatar,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport ShinMenu from \"./shinMenu\";\r\n\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport decode from \"jwt-decode\";\r\nimport { dispatchLogin, fetchUser, dispatchGetUser ,} from '../../redux/actions/authAction'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    vide: {\r\n      /**j ai de besoin de cette classes vide  */\r\n    },\r\n    appBarInitial: {\r\n      padding: 0,\r\n      width: \"100%\",\r\n      height: 80,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      position: \"fixed\",\r\n      background: \"transparent\",\r\n    },\r\n    animatetransParentToWhite: {\r\n      animation: `transParentToWhite  linear `,\r\n      animationDuration: \"500ms\",\r\n      height: 90,\r\n      backgroundColor: \"white\",\r\n    },\r\n    animatewhiteToTransparent: {\r\n      animation: `whiteToTransparent  linear `,\r\n      animationDuration: \"500ms\",\r\n      height: 90,\r\n    },\r\n\r\n    \"@global\": {\r\n      \"@keyframes transParentToWhite\": {\r\n        \"  0% \": { backgroundColor: \"transparent\" },\r\n        \"100% \": { backgroundColor: \"white\" },\r\n      },\r\n      \"@keyframes whiteToTransparent\": {\r\n        \"  0% \": { backgroundColor: \"white\" },\r\n        \"100% \": { backgroundColor: \"transparent\" },\r\n      },\r\n    },\r\n    menuBarre: {\r\n      width: \"97%\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      margin: \"auto\",\r\n    },\r\n    BtnSignUp: {\r\n      backgroundColor: \"red !important\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n\r\n    nom_profil: {\r\n\r\n      marginLeft: '15px',\r\n      color: 'red',\r\n\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        fontSize: '14px',\r\n        color: 'black'\r\n      },\r\n\r\n    },\r\n  };\r\n});\r\n\r\n\r\n\r\nconst ShinBarreMenu = ({ }) => {\r\n  const classes = useStyles();\r\n  const [fadeAnimation, setFadeAnimation] = useState(false);\r\n  const [animateChampText, setAnimateChampText] = useState(false);\r\n  const [animateAppBar, setAnimateAppBar] = useState(classes.vide);\r\n  const [nomLogo, setNomLogo] = useState(\"nomApp\");\r\n  const mediaquery = useMediaQuery(\"(max-width:600px)\");\r\n\r\n\r\n  const scroller = () => {\r\n    if (window.pageYOffset > 50) {\r\n      setAnimateAppBar(classes.animatetransParentToWhite);\r\n      setFadeAnimation(true);\r\n      setNomLogo(\"nomAppBlack\");\r\n    } else {\r\n      if (animateAppBar === classes.animatetransParentToWhite) {\r\n        setAnimateAppBar(classes.animatewhiteToTransparent);\r\n      }\r\n\r\n      setFadeAnimation(false);\r\n      setNomLogo(\"nomApp\");\r\n    }\r\n\r\n    if (window.pageYOffset > 600) {\r\n      setAnimateChampText(true);\r\n    } else {\r\n      setAnimateChampText(false);\r\n    }\r\n  };\r\n  window.addEventListener(\"scroll\", scroller);\r\n\r\n  const dispatch = useDispatch()\r\n  const token = useSelector(state => state.token)\r\n\r\n  const auth = useSelector(state => state.auth)\r\n\r\n  // console.log(`auth`, auth)\r\n  // console.log(`token auth`, token)\r\n  const { user, isLogged } = auth\r\n\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n        await axios.get('/user/logout')\r\n        localStorage.removeItem('firstLogin')\r\n        window.location.href = \"/\";\r\n    } catch (err) {\r\n        window.location.href = \"/\";\r\n    }\r\n}\r\n  const userLink = () => {\r\n    return (\r\n\r\n      <div style={{ display: \"flex\", flexDirection: 'row', alignItems: 'center', justifyContent:'center' }}>\r\n        <li>\r\n          <Link to='/'>\r\n            <img src={user.avatar} alt='' /> {user.fullName}\r\n          </Link>\r\n        \r\n        </li>\r\n        <ul className=\"dropdown\" style={{ display: \"flex\", flexDirection: 'row' }}>\r\n            <li><Link to=\"/profile\">Profile</Link></li>\r\n            <li><Link to=\"/\"  onClick={handleLogout}  >Logout</Link></li> \r\n           \r\n         </ul>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    const firstLogin = localStorage.getItem('firstLogin')\r\n    if (firstLogin) {\r\n      const getToken = async () => {\r\n        const res = await axios.post('/user/refreshtoken', null)\r\n       // console.log(`res resresresresresresres`, res)\r\n       // console.log(`token`, token)\r\n        dispatch({ type: 'GET_TOKEN', payload: res.data.access_token })\r\n      }\r\n      getToken()\r\n    }\r\n  }, [auth.isLogged, dispatch])\r\n\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const getUser = () => {\r\n        dispatch(dispatchLogin())\r\n        const res = fetchUser(token).then(res => {\r\n          dispatch(dispatchGetUser(res));\r\n        })\r\n        // console.log(`token 2 fetchUser`, token)\r\n        // console.log(`res res res res  `, res )        \r\n      }\r\n      getUser()\r\n    }\r\n  }, [token, dispatch])\r\n\r\n  // useEffect(() => {\r\n  //   if (token) {\r\n  //     const getRestaurants = () => {\r\n  //       dispatch(dispatchLogin())\r\n  //       const res = fetchUser(token).then(res => {\r\n  //         dispatch(dispatchGetUser(res));\r\n  //       })\r\n  //       // console.log(`token 2 fetchUser`, token)\r\n  //       // console.log(`res res res res  `, res )        \r\n  //     }\r\n  //     getRestaurants()\r\n  //   }\r\n  // }, [token, dispatch])\r\n\r\n  return (\r\n    <AppBar\r\n      className={`${animateAppBar} ${classes.appBarInitial} `}\r\n      elevation={0}\r\n    >\r\n      <Toolbar className={classes.menuBarre}>\r\n        <ShinMenu nomLogo={nomLogo}\r\n        // User={User} \r\n        // Logout={logout} \r\n        />\r\n\r\n        <div id=\"champTextContainer\">\r\n          {\r\n            <Collapse in={animateChampText} direction=\"up\">\r\n              <Search divClassName=\"rechercheMenu\" inputClassName=\"inputMenu\" />\r\n            </Collapse>\r\n          }\r\n        </div>\r\n\r\n\r\n        {isLogged ? userLink()\r\n\r\n\r\n          : (\r\n            <BoutonSignUp nomClass=\"signUpBtn\" />\r\n          )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default ShinBarreMenu;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const token = User?.token;\r\n\r\n  //   if (token) {\r\n  //     const decodedToken = decode(token);\r\n\r\n  //     if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n  //   }\r\n\r\n  //   setUser(JSON.parse(localStorage.getItem(\"profile\")));\r\n  // }, [location]);\r\n            //  <div style={{ display: \"flex\", flexDirection: 'row', alignItems: 'center', width: 'auto' }}>\r\n\r\n          //  </div>\r\n\r\n          //   {/* </div> */}\r\n          //   {/* <Avatar\r\n          //     className={classes.purple}\r\n          //     alt={isLogged?.user.name}\r\n          //     src={null}\r\n          //   > */}\r\n          //   {/* {User?.result.fullName.charAt(0)} */}\r\n          //   {/* </Avatar> */}\r\n          //   {/* <div className={classes.nom_profil}> {User?.result.fullName} </div> */}\r\n\r\n          //   {/* {mediaquery ? null : (\r\n          //     <Button onClick={logout} style={{ backgroundColor: \"black\", color: 'white', marginLeft: '15px', fontSize: '15px', textTransform: 'none' }}>\r\n          //       {\" \"}\r\n          //       se deconnecter{\" \"}\r\n          //     </Button>\r\n          //   )} */}\r\n\r\n            // const [User, setUser] = useState(JSON.parse(localStorage.getItem(\"firstLogin\")));\r\n\r\n\r\n\r\n  // const logout = () => {\r\n  //   dispatch({ type: \"LOGOUT\" });\r\n\r\n  //   history.push(\"/\");\r\n\r\n  //   setUser(null);\r\n  // };","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\chatBot\\actionProvider.js",["322","323"],"import { Message } from \"@material-ui/icons\";\r\n\r\nclass ActionProvider{\r\n\r\n    constructor(createChatBotMessage , setStateFunc){\r\n        this.createChatBotMessage = createChatBotMessage  ;  // le bind\r\n        this.setState = setStateFunc  ; // nani ?? \r\n    }\r\n\r\n     \r\n\r\n    helloWolrdHandler=()=>{ // faire aussi un tableau de reponse qui ont le mm sens et choisir une par hasard , cool non ???\r\n\r\n       const tab= ['ohayo ! genki ??' ,'bonjour comment vas tu ? ' ,'sbah el khir frere ' , 'oooy teeme'] ; \r\n\r\n     const message = this.createChatBotMessage(tab[Math.floor(Math.random()*4)]) ; \r\n     this.setChatBotMessage(message) ; \r\n     \r\n    }\r\n\r\n\r\n    restaurantHandler=()=>{\r\n        const tab= ['ohayo ! genki ??' ,'bonjour comment vas tu ? ' ,'sbah el khir frere ' , 'oooy teeme'] ; \r\n\r\n    }\r\n    \r\n\r\n\r\n\r\n    setChatBotMessage=(message)=>{\r\n        this.setState( state=>({...state, messages:[...state.messages , message]})) ; // cette ligne est flou ada idiwi state , anda idiwi messageS ??????\r\n    }\r\n}\r\n\r\n\r\n\r\nexport  default ActionProvider ; ; ","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaire\\informations.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaire\\Partenaire.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\chatBot\\messageParser.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\api.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\nosService\\service.js",["324","325"],"import { Button,Paper,makeStyles, Container } from \"@material-ui/core\";\r\nimport React, { useState } from 'react';\r\n\r\n\r\n\r\nconst useStyles= makeStyles(theme=>{\r\n    return {\r\n    '@globale':{\r\n        '@keyframes animation1':{\r\n            '0%':{\r\n                transform:'scale(0)' ,\r\n\r\n            } ,\r\n            '100%':{\r\n                transform:'scale(1.5)' ,\r\n            }\r\n        }\r\n    },\r\n    container:{\r\n        maxWidth:300,\r\n        maxHeight:300,\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center' ,\r\n        textAlign:'center' ,\r\n        \r\n\r\n    },\r\n    paperRond:{\r\n        width :160, maxWidth :180,\r\n        height : 160 ,  maxHeight : 180 , \r\n        borderRadius:'50%',\r\n        backgroundColor:'#ae7419',\r\n      \r\n       '&:hover':{\r\n        //  animation:'aniamtion1', \r\n        //  animationDuration :'200ms'\r\n        \r\n       } ,[theme.breakpoints.down('md')]:{\r\n        width :120,\r\n        height : 120 ,  \r\n       }\r\n\r\n    }\r\n    \r\n\r\n}\r\n\r\n})\r\n\r\nconst Service=({ information })=>{\r\nconst classes=useStyles() ;\r\n    return (\r\n        <React.Fragment>\r\n            <Container className={classes.container}>\r\n            {/* <Paper className={classes.paperRond} elevation={3}\r\n            style={{\r\n                backgroundImage: `url(${information.urlImage})`,\r\n                backgroundPosition: 'center', \r\n                backgroundSize: 'cover', \r\n                backgroundRepeat: 'no-repeat',\r\n            }} >\r\n            </Paper> */}\r\n          <Button className={classes.paperRond} elevation={3}\r\n            style={{\r\n                backgroundImage: `url(${information.urlImage})`,\r\n                backgroundPosition: 'center', \r\n                backgroundSize: 'cover', \r\n                backgroundRepeat: 'no-repeat',\r\n            }} >\r\n            </Button>\r\n            \r\n            \r\n            <h2> {information.nomService}</h2>\r\n            </Container>\r\n\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Service ; ","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\nosService\\informations.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\newBarreMenu\\BoutonSignUp.js",["326"],"import {  Button, makeStyles } from \"@material-ui/core\";\r\nimport React, {  useState } from \"react\";\r\nimport {Fade  } from \"@material-ui/core\";\r\nimport Formulaire from \"../Fomulaire/Formulaire\";\r\n\r\nimport \"./menu.css\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    signUpBtn: {\r\n      backgroundColor: \"black !important\",\r\n      fontSize:'15px',\r\n      textTransform:'none', \r\n      color:'white !important' , \r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    paperSignUpBtn:{\r\n      backgroundColor: \"black !important\",\r\n      color:'white !important' , \r\n      textTransform:'none', \r\n      width: \"60% \"\r\n      \r\n\r\n    },\r\n    formClosed: {\r\n      display: \"none\",\r\n    },\r\n\r\n    formContainer: {\r\n      position: \"fixed !important\",\r\n      top: 0,\r\n      left: 0,\r\n      height: \"100% !important\",\r\n      width: \"100%  !important\",\r\n\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      zIndex: 10,\r\n      backgroundColor: \"#01010150\",\r\n    },\r\n    closeBtnForm: {\r\n      position: \"absolute\",\r\n      top: 15,\r\n      right: 15,\r\n      fontSize: \"30px\",\r\n      color: \"#fff\",\r\n      [theme.breakpoints.down('sm')]:{\r\n        top: 5,\r\n        right: 10,\r\n        fontSize: \"20px\",\r\n      }\r\n    },\r\n  };\r\n});\r\n\r\n\r\n\r\nconst SignUpBtn = ({ nomClass }) => {\r\n  const classes = useStyles();\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [FadeEnter, setFadeEnter] = useState(false);\r\n\r\n \r\n  const history = useHistory()\r\n\r\n\r\n\r\n  const handelSignUpClick = () => {\r\n    // setShowLogin(!showLogin);\r\n    // setFadeEnter(true);\r\n    history.push(\"/connexion\")\r\n\r\n  };\r\n  const handelCloseLogin = () => {\r\n    setTimeout(() => {\r\n      setShowLogin(false);\r\n    }, 350);\r\n\r\n    setFadeEnter(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        variant=\"contained\"\r\n        className={\r\n          nomClass === \"signUpBtn\" ? classes.signUpBtn : classes.paperSignUpBtn\r\n        }\r\n        onClick={handelSignUpClick}\r\n      >\r\n        Se connecter\r\n      </Button>\r\n\r\n      {showLogin && (\r\n        <Fade in={FadeEnter}>\r\n          <div\r\n            className={showLogin ? classes.formContainer : classes.formClosed}\r\n          >\r\n          \r\n            {/* <Formulaire /> */}\r\n            <Button onClick={handelCloseLogin} className={classes.closeBtnForm}>\r\n              X\r\n            </Button>\r\n          </div>\r\n        </Fade>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUpBtn;\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\newBarreMenu\\shinMenu.js",["327","328","329","330","331","332","333","334","335","336","337","338"],"import { makeStyles, Paper, Slide } from '@material-ui/core'\r\nimport { IconButton, Button } from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { useState } from \"react\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './menu.css'\r\nimport BoutonSignUp from \"../newBarreMenu/BoutonSignUp\";\r\nimport { useSelector } from 'react-redux';\r\nimport SideMenu from '../SideMenu/SideMenuAdmin';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => {\r\n    return {\r\n        voile: {\r\n            position: 'absolute', top: 0, left: 0,\r\n            height: '100%',\r\n            width: '100%',\r\n            backgroundColor: 'rgba(0,0,0,0.5)',\r\n            position: 'fixed',\r\n            zIndex: 10,\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        }\r\n        , menu: {\r\n            zIndex: 10,\r\n            height: '100%',\r\n            width: 300,\r\n            backgroundColor: '#fff',\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-between',\r\n\r\n            paddingTop: 15,\r\n            paddingBottom: 15,\r\n\r\n        },\r\n        menuEtTitre: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'flex-end',\r\n\r\n        }\r\n        , nomAppBlack: { color: '#000' }\r\n        , paperBtnSign: {\r\n            height: '25%',\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'none',\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\nconst ShinMenu = ({ nomLogo, Logout }) => {\r\n    const auth = useSelector(state => state.auth)\r\n    const { user, isLogged, isAdmin } = auth\r\n\r\n    const classes = useStyles();\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [animeEnter, setAnimeEnter] = useState(false);\r\n\r\n    const handelClick = () => {\r\n        setShowMenu(!showMenu);\r\n        setAnimeEnter(true);\r\n        console.log('open')\r\n    }\r\n\r\n\r\n    const handelClose = () => {\r\n\r\n        setTimeout(() => {\r\n            setShowMenu(false);\r\n        }, 150);\r\n        setAnimeEnter(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n\r\n            <div className={classes.menuEtTitre}>\r\n                <IconButton onClick={handelClick} >\r\n                    <MenuIcon fontSize=\"large\" />\r\n                </IconButton>\r\n                <p style={{ transform: 'translate(-5%,2%)' }} className={nomLogo}>BigNova<span className='span'>.Deliv</span ></p>\r\n\r\n            </div>\r\n\r\n\r\n            {showMenu && <Paper square={true} className={classes.voile} onClick={handelClose}></Paper>}\r\n\r\n            {showMenu &&\r\n                <Slide Slide in={animeEnter} direction='right' mountOnEnter unmountOnExit   >\r\n                    <Paper className={classes.menu} elevation={3}>\r\n                        <div>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"0px 20px\" }}>\r\n                                <h2> MENU </h2>\r\n                                <IconButton onClick={\r\n                                    handelClose\r\n                                }\r\n                                >\r\n                                    <CloseIcon size=\"large\" style={{ color: 'black' }} />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <ul >\r\n                                <li><a href='otherPages/Home.html' className='lien' >Home</a></li>\r\n                                <li> <a href='otherPages/AboutUs.html' className='lien'>About</a></li>\r\n                                <li><a href='otherPages/contact.html' className='lien'>Contact</a></li>\r\n                                <li><a href='otherPages/blog.html' className='lien'>Blog</a></li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <Paper className={classes.paperBtnSign}>\r\n                            {isLogged ?\r\n                                <Button onClick={Logout} style={{ backgroundColor: \"black\", color: 'white', width: '60%', fontSize: '15px', textTransform: 'none' }}>se Deconnecter</Button>\r\n                                :\r\n                                <BoutonSignUp nomClass='paperSignUpBtn' />\r\n\r\n                            }\r\n                        </Paper>\r\n                    </Paper>\r\n                </Slide>\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n        </React.Fragment >\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default ShinMenu\r\n\r\n\r\n\r\n\r\n\r\n{/* { */ }\r\n{/* isAdmin ? <> */ }\r\n{/* <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"0px 10px\" }}>\r\n                                    <h2> MENUE ADMIN </h2>\r\n                                    <IconButton onClick={\r\n                                        handelClose\r\n                                    }\r\n                                    >\r\n                                        <CloseIcon size=\"large\" style={{ color: 'black' }} />\r\n                                    </IconButton>\r\n                                </div>\r\n\r\n                                    <ul >\r\n                                        <li><a href='otherPages/Home.html' className='lien' > Dashboard </a></li>\r\n                                        {/* <li> <a href='otherPages/AboutUs.html' className='lien'>About</a></li>\r\n                                        <li><a href='otherPages/contact.html' className='lien'>Contact</a></li>\r\n                                        <li><a href='otherPages/blog.html' className='lien'>Blog</a></li> */}\r\n{/* <li><a href='otherPages/blog.html' className='lien'>View-all-restaurants</a></li>\r\n                                        <li><a href='otherPages/blog.html' className='lien'>view-single-restaurants</a></li>\r\n                                        <li><a href='otherPages/blog.html' className='lien'>create restaurant</a></li>\r\n                                        <li><a href='otherPages/blog.html' className='lien'>update restaurant</a></li>\r\n                                        <li><a href='otherPages/blog.html' className='lien'>delete restaurant</a></li> */}\r\n{/* <li><a href='otherPages/blog.html' className='lien'> Profile  </a></li>\r\n                                        <li><a href='otherPages/blog.html' className='lien'> Nos partenaires</a></li> */}\r\n{/* </ul> */ }\r\n// {/* </> */ } * /}\r\n{/* : */ }\r\n\r\n\r\n{/* } */ }","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\chatBot\\view\\config.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\chatBot\\ChatDocs.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\adminPage\\CreateCmd.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\auth\\login.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\utils\\notification\\notification.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\actions\\index.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\store.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\actions\\authAction.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\auth\\register.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\utils\\validation\\Validation.js",["339"],"export const isEmpty = value => {\r\n    if(!value) return true\r\n    return false\r\n}\r\n\r\nexport const isEmail = email => {\r\n    // eslint-disable-next-line\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\nexport const isPhone = telephone => {\r\n    \r\n    const te = /(0|\\+213)[5-7]([0-9]{2}){4}$/;\r\n    return te.test(telephone);\r\n}\r\n\r\nexport const isLength = password => {\r\n    if(password.length < 6) return true\r\n    return false\r\n}\r\n\r\nexport const isMatch = (password, cf_password) => {\r\n    if(password === cf_password) return true\r\n    return false\r\n}\r\n\r\n\r\n\r\nexport const isName = fullName => {\r\n    \r\n    const te = /^([a-zA-Z]+[ ]?|[a-zA-Z]+['-]?[])+$/;\r\n    return te.test(fullName);\r\n}","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\auth\\ActivationCompte.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\tokenReducer.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\utils\\notFound\\NotFound.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\auth\\forgotPassword.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\auth\\ResetPassword.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\profile\\Profile.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { isLength, isMatch, isName } from '../../utils/validation/Validation'\r\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/notification'\r\n\r\nimport { fetchAllUsers, dispatchGetAllUsers } from '../../redux/actions/usersAction'\r\nimport ShinBarreMenu from '../newBarreMenu/shinBarreMenu'\r\nimport SideMenu from '../SideMenu/SideMenuAdmin'\r\nimport { IconButton } from '@material-ui/core'\r\nimport logo2 from \"../../assets/user.jpg\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport HeaderSideBarre from '../adminPage/HeaderSideBarre'\r\n\r\nconst initialState = {\r\n    fullName: '',\r\n    motDePasse: '',\r\n    cf_motDePasse: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction Profile() {\r\n    const auth = useSelector(state => state.auth)\r\n    const token = useSelector(state => state.token)\r\n\r\n    const users = useSelector(state => state.users)\r\n    console.log('users', users)\r\n    const { user, isAdmin } = auth\r\n    const [data, setData] = useState(initialState)\r\n    const { fullName, motDePasse, cf_motDePasse, err, success } = data\r\n    const [inactive, setInactive] = useState(true);\r\n\r\n    const [avatar, setAvatar] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [callback, setCallback] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (isAdmin) {\r\n            fetchAllUsers(token).then(res => {\r\n                dispatch(dispatchGetAllUsers(res))\r\n            })\r\n        }\r\n    }, [token, isAdmin, dispatch, callback])\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setData({ ...data, [name]: value, err: '', success: '' })\r\n    }\r\n\r\n    \r\n\r\n   \r\n\r\n    const updatePassword = () => {\r\n        if (isLength(motDePasse))\r\n            return setData({ ...data, err: \"Le mot de passe doit être au moins de 6 caractères.\", success: '' })\r\n\r\n        if (!isMatch(motDePasse, cf_motDePasse))\r\n            return setData({ ...data, err: \"Le mot de passe ne correspond pas.\", success: '' })\r\n\r\n        try {\r\n            axios.post('/user/reset', { motDePasse }, {\r\n                headers: {\r\n                    'x-access-token': token\r\n                }\r\n            })\r\n\r\n            setData({ ...data, err: '', success: \"mise à jour Succès!\" })\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href = \"/\";\r\n        } catch (err) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n    const handelOpen = ()=>{\r\n        setInactive(!inactive)\r\n    }\r\n\r\n  \r\n    const handleDelete = async (id) => {\r\n        try {\r\n            if (user._id !== id) {\r\n                if (window.confirm(\"Are you sure you want to delete this account?\")) {\r\n                    setLoading(true)\r\n                    await axios.delete(`/user/delete/${id}`, {\r\n                        headers: {\r\n                            'x-access-token': token\r\n                        }\r\n                    })\r\n                    setLoading(false)\r\n                    setCallback(!callback)\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='menue'>\r\n                <SideMenu />\r\n\r\n            </div>\r\n\r\n            <HeaderSideBarre logo2={logo2}  user={user} handelOpen={handelOpen} inactive={inactive} handleLogout={handleLogout} />\r\n\r\n            <div className=\"profile_page\">\r\n                <div className=\"col-right\">\r\n                    <h2>{isAdmin ? \"Users\" : \"My Orders\"}</h2>\r\n\r\n                    <div style={{ overflowX: \"auto\" }}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Admin</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    users.map(user => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.fullName}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    user.role === 1\r\n                                                        ? <i className=\"fas fa-check\" title=\"Admin\"></i>\r\n                                                        : <i className=\"fas fa-times\" title=\"User\"></i>\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={`/edit_user/${user._id}`}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <i className=\"fas fa-trash-alt\" title=\"Remove\"\r\n                                                    onClick={() => handleDelete(user._id)} ></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n              \r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\actions\\usersAction.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\usersReducer.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\profile\\EditUser.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\SideMenu\\SideMenuAdmin.js",["354"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport logo2 from \"../../assets/user.jpg\";\r\n\r\nimport MenuItem from \"./MenuItem\";\r\n\r\n\r\n/**\r\n * @author\r\n * @function SideMenu\r\n **/\r\n\r\n// added more menuItems for testing\r\nexport const menuItems = [\r\n    {\r\n        name: \"Dashboard\",\r\n        exact: true,\r\n        to: \"/dashborad\",\r\n        iconClassName: \"bi bi-speedometer2\",\r\n    },\r\n    {\r\n        name: \"Profile\",\r\n        exact: true,\r\n        to: \"/profile\",\r\n        iconClassName: \"bi bi-person-square\",\r\n    },\r\n    {\r\n        name: \"Nos partenaires\",\r\n        exact: true,\r\n        to: '/profile',\r\n        iconClassName: \"bi bi-award\",\r\n        subMenus: [\r\n            { name: \"Restaurants\", to: \"/partenaires/Restaurants\" },\r\n            { name: \"pâtisseries\", to: \"/partenaires/pâtisseries\" },\r\n        ],\r\n    },\r\n    { name: \"A propos\", to: `/apropos`, iconClassName: \"bi bi-exclamation-circle\" },\r\n\r\n];\r\n\r\nconst SideMenu = (props) => {\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    // console.log(`auth`, auth)\r\n    // console.log(`token auth`, token)\r\n    const { user, isLogged } = auth\r\n    const [inactive, setInactive] = useState(false);\r\n\r\n    //   useEffect(() => {\r\n    //     if (inactive) {\r\n    //       removeActiveClassFromSubMenu();\r\n    //     }\r\n\r\n    //     props.onCollapse(inactive);\r\n    //   }, [inactive]);\r\n\r\n    //just an improvment and it is not recorded in video :(\r\n    const removeActiveClassFromSubMenu = () => {\r\n        document.querySelectorAll(\".sub-menu\").forEach((el) => {\r\n            el.classList.remove(\"active\");\r\n        });\r\n    };\r\n\r\n    /*just a little improvement over click function of menuItem\r\n      Now no need to use expand state variable in MenuItem component\r\n    */\r\n    useEffect(() => {\r\n        let menuItems = document.querySelectorAll(\".menu-item\");\r\n        menuItems.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                const next = el.nextElementSibling;\r\n                removeActiveClassFromSubMenu();\r\n                menuItems.forEach((el) => el.classList.remove(\"active\"));\r\n                el.classList.toggle(\"active\");\r\n               // console.log(next);\r\n                if (next !== null) {\r\n                    next.classList.toggle(\"active\");\r\n                }\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`side-menu ${inactive ? \"inactive\" : \"\"}`}>\r\n            <div className=\"top-section\">\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"webscript\" />\r\n                </div>\r\n                <div onClick={() => setInactive(!inactive)} className=\"toggle-menu-btn\">\r\n                    {inactive ? (\r\n                        <i class=\"bi bi-arrow-right-square-fill\"></i>\r\n                    ) : (\r\n                        <i class=\"bi bi-arrow-left-square-fill\"></i>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"search-controller\">\r\n                <button className=\"search-btn\">\r\n                    <i class=\"bi bi-search\"></i>\r\n                </button>\r\n\r\n                <input type=\"text\" placeholder=\"search\" />\r\n            </div>\r\n\r\n            <div className=\"divider\"></div>\r\n\r\n            <div className=\"main-menu\">\r\n\r\n                {menuItems.map((menuItem, index) => (\r\n                    <MenuItem\r\n                        key={index}\r\n                        name={menuItem.name}\r\n                        exact={menuItem.exact}\r\n                        to={menuItem.to}\r\n                        subMenus={menuItem.subMenus || []}\r\n                        iconClassName={menuItem.iconClassName}\r\n                        onClick={(e) => {\r\n                            if (inactive) {\r\n                                setInactive(false);\r\n                            }\r\n                        }}\r\n                    />\r\n                ))}\r\n\r\n                {/* <div className='container-item'>\r\n                    <a className=\"menu-item\">\r\n                        <div className=\"menu-icon\">\r\n                            <i class=\"bi bi-speedometer2\"></i>\r\n                        </div>\r\n                        <span>Dashboard</span>\r\n                    </a>\r\n                </div> */}\r\n                {/* <MenuItem\r\n            name={\"Content\"}\r\n            subMenus={[{ name: \"Courses\" }, { name: \"Videos\" }]}\r\n          /> */}\r\n                {/* <div className='container-item'>\r\n                    <a className=\"menu-item\">\r\n                        <div className=\"menu-icon\">\r\n                            <i class=\"bi bi-person-square\"></i>\r\n                        </div>\r\n                        <span>Profile</span>\r\n                    </a>\r\n                </div> */}\r\n                {/* <div className='container-item'>\r\n                    <a className=\"menu-item\">\r\n                        <div className=\"menu-icon\">\r\n                            <i class=\"bi bi-award\"></i>\r\n                        </div>\r\n                        <span>Nos partenaires</span>\r\n                    </a>\r\n                </div> */}\r\n\r\n            </div>\r\n\r\n            <div className=\"side-menu-footer\">\r\n                <div className=\"avatar\">\r\n                    <img src={logo2} alt=\"user\" />\r\n                </div>\r\n                <div className=\"user-info\">\r\n                    <h5>{user.fullName}</h5>\r\n                    <p>{user.email}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideMenu;","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\SideMenu\\MenuItem.js",["355","356","357","358"],"import React, { useRef, useState } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function MenuItem\r\n **/\r\n\r\nconst MenuItem = (props) => {\r\n    const { name, subMenus, iconClassName, onClick, to, exact } = props;\r\n    const [expand, setExpand] = useState(false);\r\n//console.log(subMenus)\r\n    return (\r\n        // <div className='item-menu'>\r\n            <div onClick={props.onClick}>\r\n                <Link\r\n                    exact\r\n                    to={to}\r\n\r\n                    onClick={() => {\r\n                      setExpand((e) => !e);\r\n                    }}\r\n                    className={`menu-item`}\r\n                >\r\n                    \r\n                    <div className=\"menu-icon\">\r\n                        <i class={iconClassName}></i>\r\n                    </div>\r\n                    <span>{name}</span>\r\n                </Link>\r\n                {subMenus && subMenus.length > 0 ? (\r\n                    <div className={`sub-menu`}>\r\n                        {subMenus.map((menu, index) => (\r\n                            <div key={index}>\r\n                                <NavLink to={menu.to}>{menu.name}</NavLink>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) :null}\r\n            </div>\r\n\r\n          \r\n    );\r\n};\r\n\r\nexport default MenuItem;","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\test\\TestMenu.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaires\\Restaurants.js",["359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { isLength, isMatch, isName } from '../../utils/validation/Validation'\r\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/notification'\r\n\r\nimport { fetchAllUsers, dispatchGetAllUsers } from '../../redux/actions/usersAction'\r\nimport ShinBarreMenu from '../newBarreMenu/shinBarreMenu'\r\nimport SideMenu from '../SideMenu/SideMenuAdmin'\r\nimport { IconButton } from '@material-ui/core'\r\nimport logo2 from \"../../assets/user.jpg\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport HeaderSideBarre from '../adminPage/HeaderSideBarre'\r\nimport { dispatchGetAllRestaurants, fetchAllRestaurants } from '../../redux/actions/restaurantsAction'\r\n\r\nconst initialState = {\r\n    fullName: '',\r\n    motDePasse: '',\r\n    cf_motDePasse: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction Profile() {\r\n    const auth = useSelector(state => state.auth)\r\n    const token = useSelector(state => state.token)\r\n\r\n    const users = useSelector(state => state.users)\r\n    const restaurants = useSelector(state => state.restaurants)\r\n    // console.log('users', users)\r\n    //console.log('restaurants', restaurants)\r\n    const { user, isAdmin } = auth\r\n    const { restaurant } = restaurants\r\n\r\n    const [data, setData] = useState(initialState)\r\n    const { fullName, motDePasse, cf_motDePasse, err, success } = data\r\n\r\n\r\n    const [inactive, setInactive] = useState(true);\r\n    const [active, setActive] = useState(true);\r\n    const [activeInfo, setactiveInfo] = useState(true)\r\n    const [aData, setAdata] = useState('')\r\n    const [avatar, setAvatar] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [callback, setCallback] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (isAdmin) {\r\n            fetchAllUsers(token).then(res => {\r\n                dispatch(dispatchGetAllUsers(res))\r\n            })\r\n        }\r\n    }, [token, isAdmin, dispatch, callback])\r\n    //const [id , setId] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (isAdmin) {\r\n            fetchAllRestaurants(token).then(res => {\r\n                dispatch(dispatchGetAllRestaurants(res))\r\n            })\r\n        }\r\n    }, [token, isAdmin, dispatch, callback])\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            if (user._id !== id) {\r\n                if (window.confirm(\"Are you sure you want to delete this account?\")) {\r\n                    setLoading(true)\r\n                    await axios.delete(`/user/delete/${id}`, {\r\n                        headers: {\r\n                            'x-access-token': token\r\n                        }\r\n                    })\r\n                    setLoading(false)\r\n                    setCallback(!callback)\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setData({ ...data, [name]: value, err: '', success: '' })\r\n    }\r\n    const updatePassword = () => {\r\n        if (isLength(motDePasse))\r\n            return setData({ ...data, err: \"Le mot de passe doit être au moins de 6 caractères.\", success: '' })\r\n\r\n        if (!isMatch(motDePasse, cf_motDePasse))\r\n            return setData({ ...data, err: \"Le mot de passe ne correspond pas.\", success: '' })\r\n\r\n        try {\r\n            axios.post('/user/reset', { motDePasse }, {\r\n                headers: {\r\n                    'x-access-token': token\r\n                }\r\n            })\r\n\r\n            setData({ ...data, err: '', success: \"mise à jour Succès!\" })\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href = \"/\";\r\n        } catch (err) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    const handelfetchRestaurant = async (id) => {\r\n\r\n        if (user._id !== id) {\r\n            const res = await axios.get(`/admin/restaurantInfo/${id}`, {\r\n                headers: {\r\n                    'x-access-token': token\r\n                },\r\n                body: {\r\n                    id\r\n                }\r\n            })\r\n            // .then(resp => {\r\n            //     console.log(resp.data);\r\n            //     setAdata(resp.data.Restaurant.tva)\r\n            //     console.log('resprespresp',resp)\r\n            // }\r\n            // )\r\n            console.log(`res`, res.data.Restaurant)\r\n            setAdata(res.data)\r\n           // console.log(`aData`, aData.Restaurant.email)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handelOpen = () => {\r\n        setInactive(!inactive)\r\n    }\r\n    const handelOpenAdd = () => {\r\n        setActive(!active)\r\n    }\r\n    const handelOpenInfoResto = () => {\r\n        setactiveInfo(!activeInfo)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handelGetRestaurantInfo = async (id) => {\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className='menue'>\r\n                <SideMenu />\r\n\r\n            </div>\r\n\r\n            <HeaderSideBarre logo2={logo2} user={user} handelOpen={handelOpen} inactive={inactive} handleLogout={handleLogout} />\r\n            {/* <div className='sliderAdd'> */}\r\n            <div className={`sliderAdd ${active ? \"active\" : \"\"}`}>\r\n                <div className='box-circle-icon'>\r\n                    <i class=\"bi bi-x-circle\" onClick={() => { handelOpenAdd() }}></i>\r\n                </div>\r\n\r\n                <div className='box-input'>\r\n                    <div className='item-input'>\r\n                        nom restaurant :\r\n                        <input ></input>\r\n                    </div>\r\n                    <div className='item-input'>\r\n                        description :\r\n                        <input ></input>\r\n                    </div>\r\n                    <div className='item-input'>\r\n                        speciality :\r\n                        <input></input>\r\n                    </div>\r\n\r\n                    <div className='item-input'>\r\n                        address :\r\n                        <input></input>\r\n                    </div>\r\n                    <div className='item-input'>\r\n                        phone :\r\n                        <input></input>\r\n                    </div>\r\n                    <div className='item-input'>\r\n                        registre :\r\n                        <input></input>\r\n                    </div >\r\n                    <div className='item-input'>\r\n                        tva :\r\n                        <input></input>\r\n                    </div>\r\n\r\n                    Image :\r\n                    <input type=\"file\" />\r\n\r\n                </div>\r\n                <button>\r\n                    modifier\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div className={`sliderInfo ${activeInfo ? \"activeInfo\" : \"\"}`}>\r\n                <div className='box-circle-icon'>\r\n                    <i class=\"bi bi-x-circle\" onClick={() => { handelOpenInfoResto() }}></i>\r\n                </div>\r\n\r\n                {aData && <div className='box-input'>\r\n                    <div className='box-image-i'>\r\n                        <div>\r\n                            <div className='item-input'>\r\n                                <h3>ID :</h3> <h4>  {aData.Restaurant._id}</h4>\r\n                            </div>\r\n                            <div className='item-input'>\r\n                                <h3>nom restaurant :</h3> <h4> {aData.Restaurant.restaurant}</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='image-box'></div>\r\n\r\n                    </div>\r\n\r\n                    <div className='item-input'>\r\n                        <h3>Description : {aData.Restaurant.description} </h3>\r\n                    </div>\r\n                    <div className='item-input'>\r\n                        <h3>spécialité : {aData.Restaurant.speciality}</h3>\r\n                    </div>\r\n                    <div className='item-input'>\r\n                        <h3>E-mail : {aData.Restaurant.email}</h3>\r\n                    </div>\r\n\r\n                    <div className='item-input'>\r\n                        <h3>address : {aData.Restaurant.address}</h3>\r\n                    </div>\r\n                    <div className='item-input'>\r\n                        <h3>téléphone : {aData.Restaurant.phone}</h3>\r\n                    </div>\r\n                    <div className='item-input'>\r\n                        <h3> registre  : {aData.Restaurant.registre}</h3>\r\n                    </div >\r\n                    <div className='item-input'>\r\n                        <h3> tva : {aData.Restaurant.tva}</h3>\r\n                    </div>\r\n                    <div className='item-input'>\r\n                        <h3>Site Web : {aData.Restaurant.siteweb} </h3>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                </div>}\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"profile_page\">\r\n\r\n                <div className=\"col-right\">\r\n\r\n                    <div className='box-title'>\r\n                        <h2>{isAdmin ? \"Les Restaurants\" : \"My Orders\"}</h2>\r\n                        <button className='box-btn' onClick={() => { handelOpenAdd() }}>\r\n                            Ajouter\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div style={{ overflowX: \"auto\" }}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Nom Restaurant</th>\r\n                                    <th>spécialité</th>\r\n                                    <th>E-mail</th>\r\n                                    <th>téléphone</th>\r\n                                    <th>plus information</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    restaurants.map(restaurant => (\r\n                                        <tr key={restaurant._id} >\r\n                                            <td>{restaurant._id}</td>\r\n                                            <td>{restaurant.restaurant}</td>\r\n                                            <td>{restaurant.speciality}</td>\r\n                                            <td>{restaurant.email}</td>\r\n                                            <td>{restaurant.phone}</td>\r\n                                            <td onClick={() => {\r\n                                                // let _id = restaurant._id\r\n                                                handelOpenInfoResto()\r\n                                                // setId(restaurant._id)\r\n                                                // console.log(`id`, id)\r\n                                                handelfetchRestaurant(restaurant._id)\r\n                                            }}> plus ....</td>\r\n\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaires\\partenaires.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\partenaires\\patisseries.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\dashborad\\dashborad.js",["378"],"import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport HeaderSideBarre from '../adminPage/HeaderSideBarre'\r\nimport SideMenu from '../SideMenu/SideMenuAdmin'\r\nimport logo2 from \"../../assets/user.jpg\";\r\nimport axios from 'axios'\r\n\r\nfunction Dashborad() {\r\n    const auth = useSelector(state => state.auth)\r\n    const { user, isAdmin } = auth\r\n    const [inactive, setInactive] = useState(true);\r\n\r\n    const handelOpen = ()=>{\r\n        setInactive(!inactive)\r\n    }\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href = \"/\";\r\n        } catch (err) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SideMenu />\r\n            <HeaderSideBarre  logo2={logo2} handleLogout={handleLogout} user={user} handelOpen={handelOpen} inactive={inactive}/>\r\n\r\n            <div className='container-title-dashborad'>\r\n                <h1>les Restaurentes</h1>\r\n                <div className='container-item'>\r\n                    <input placeholder='recherche' />\r\n                    <div className='container-btn'>\r\n                        <button>import / export</button>\r\n                        <button>ajouter</button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashborad\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\adminPage\\HeaderSideBarre.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\profile\\UpdateProfile\\updateProfile.js",["379","380"],"import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport HeaderSideBarre from '../../adminPage/HeaderSideBarre'\r\nimport SideMenu from '../../SideMenu/SideMenuAdmin'\r\nimport axios from 'axios'\r\nimport logo2 from \"../../../assets/user.jpg\";\r\nimport { showErrMsg, showSuccessMsg } from '../../../utils/notification/notification'\r\nimport { isLength, isMatch, isName } from '../../../utils/validation/Validation'\r\n\r\nfunction UpDateProfile() {\r\n    const initialState = {\r\n        fullName: '',\r\n        motDePasse: '',\r\n        cf_motDePasse: '',\r\n        err: '',\r\n        success: ''\r\n    }\r\n    const token = useSelector(state => state.token)\r\n\r\n    const [data, setData] = useState(initialState)\r\n    const { fullName, motDePasse, cf_motDePasse, err, success } = data\r\n    const [avatar, setAvatar] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [callback, setCallback] = useState(false)\r\n    const auth = useSelector(state => state.auth)\r\n    const { user, isAdmin } = auth\r\n    const [inactive, setInactive] = useState(true);\r\n    const handelOpen = () => {\r\n        setInactive(!inactive)\r\n    }\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href = \"/\";\r\n        } catch (err) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n    const changeAvatar = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const file = e.target.files[0]\r\n\r\n            if (!file) return setData({ ...data, err: \"No files were uploaded.\", success: '' })\r\n\r\n            if (file.size > 1024 * 1024)\r\n                return setData({ ...data, err: \"Size too large.\", success: '' })\r\n\r\n            if (file.type !== 'image/jpeg' && file.type !== 'image/png')\r\n                return setData({ ...data, err: \"File format is incorrect.\", success: '' })\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_avatar', formData, {\r\n                headers: { 'content-type': 'multipart/form-data', 'x-access-token': token }\r\n            })\r\n\r\n            setLoading(false)\r\n            setAvatar(res.data.url)\r\n\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setData({ ...data, [name]: value, err: '', success: '' })\r\n    }\r\n    const handleUpdate = () => {\r\n        if (fullName || avatar) updateInfor()\r\n        if (motDePasse) updatePassword()\r\n    }\r\n    const updateInfor = () => {\r\n        if (!isName(fullName))\r\n            return setData({ ...data, err: \"Le nom est invalide.\", success: '' })\r\n\r\n        try {\r\n            axios.patch('/user/update', {\r\n                fullName: fullName ? fullName : user.fullName,\r\n                avatar: avatar ? avatar : user.avatar\r\n            }, {\r\n                headers: {\r\n                    'x-access-token': token\r\n                }\r\n            })\r\n\r\n            setData({ ...data, err: '', success: \"mise à jour Succès !\" })\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n    const updatePassword = () => {\r\n        if (isLength(motDePasse))\r\n            return setData({ ...data, err: \"Le mot de passe doit être au moins de 6 caractères.\", success: '' })\r\n\r\n        if (!isMatch(motDePasse, cf_motDePasse))\r\n            return setData({ ...data, err: \"Le mot de passe ne correspond pas.\", success: '' })\r\n\r\n        try {\r\n            axios.post('/user/reset', { motDePasse }, {\r\n                headers: {\r\n                    'x-access-token': token\r\n                }\r\n            })\r\n\r\n            setData({ ...data, err: '', success: \"mise à jour Succès!\" })\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SideMenu />\r\n            <HeaderSideBarre logo2={logo2} handleLogout={handleLogout} user={user} handelOpen={handelOpen} inactive={inactive} />\r\n            <div className='profile_page'>\r\n                <div className=\"col-left\">\r\n                    <div>\r\n                        {err && showErrMsg(err)}\r\n                        {success && showSuccessMsg(success)}\r\n                        {loading && <h3>Loading.....</h3>}\r\n                    </div>\r\n                    <h2>{isAdmin ? \"Admin Profile\" : \"User Profile\"}</h2>\r\n\r\n                    <div className=\"avatar\">\r\n                        <img src={avatar ? avatar : user.avatar} alt=\"\" />\r\n                        <span>\r\n                            <i className=\"fas fa-camera\"></i>\r\n                            <p>Change</p>\r\n                            <input type=\"file\" name=\"file\" id=\"file_up\" onChange={changeAvatar} />\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Nom</label>\r\n                        <input type=\"text\" name=\"fullName\" id=\"fullName\" defaultValue={user.fullName}\r\n                            placeholder=\"Your name\" onChange={handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">E-mail</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" defaultValue={user.email}\r\n                            placeholder=\"Your email address\" disabled />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">nouveau mot de passe</label>\r\n                        <input type=\"password\" name=\"motDePasse\" id=\"motDePasse\" defaultValue=''\r\n                            placeholder=\"Your password\" value={motDePasse} onChange={handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"cf_motDePasse\">Confirmer le nouveau mot de passe</label>\r\n                        <input type=\"password\" name=\"cf_motDePasse\" id=\"cf_motDePasse\" defaultValue=''\r\n                            placeholder=\"Confirm password\" value={cf_motDePasse} onChange={handleChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <em style={{ color: \"crimson\" }}>\r\n                            * Si vous mettez à jour votre mot de passe ici, vous ne pourrez pas\r\n                            pour vous connecter rapidement en utilisant google et facebook.\r\n                        </em>\r\n                    </div>\r\n\r\n                    <button disabled={loading} onClick={handleUpdate}>Update</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpDateProfile\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\component\\profile\\InfoScreen\\Info-profile.js",["381","382","383","384","385","386","387","388","389","390","391","392","393"],"import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport HeaderSideBarre from '../../adminPage/HeaderSideBarre'\r\nimport SideMenu from '../../SideMenu/SideMenuAdmin'\r\nimport axios from 'axios'\r\nimport logo2 from \"../../../assets/user.jpg\";\r\nimport { showErrMsg, showSuccessMsg } from '../../../utils/notification/notification'\r\nimport { isLength, isMatch, isName } from '../../../utils/validation/Validation'\r\n\r\nfunction InfoProfile() {\r\n    const initialState = {\r\n        fullName: '',\r\n        motDePasse: '',\r\n        cf_motDePasse: '',\r\n        err: '',\r\n        success: ''\r\n    }\r\n    const token = useSelector(state => state.token)\r\n\r\n    const [data, setData] = useState(initialState)\r\n    const { fullName, motDePasse, cf_motDePasse, err, success } = data\r\n    const [avatar, setAvatar] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [callback, setCallback] = useState(false)\r\n    const auth = useSelector(state => state.auth)\r\n    const { user, isAdmin } = auth\r\n    const [inactive, setInactive] = useState(true);\r\n    const handelOpen = () => {\r\n        setInactive(!inactive)\r\n    }\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href = \"/\";\r\n        } catch (err) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n    const changeAvatar = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const file = e.target.files[0]\r\n\r\n            if (!file) return setData({ ...data, err: \"No files were uploaded.\", success: '' })\r\n\r\n            if (file.size > 1024 * 1024)\r\n                return setData({ ...data, err: \"Size too large.\", success: '' })\r\n\r\n            if (file.type !== 'image/jpeg' && file.type !== 'image/png')\r\n                return setData({ ...data, err: \"File format is incorrect.\", success: '' })\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_avatar', formData, {\r\n                headers: { 'content-type': 'multipart/form-data', 'x-access-token': token }\r\n            })\r\n\r\n            setLoading(false)\r\n            setAvatar(res.data.url)\r\n\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setData({ ...data, [name]: value, err: '', success: '' })\r\n    }\r\n    const handleUpdate = () => {\r\n        if (fullName || avatar) updateInfor()\r\n        if (motDePasse) updatePassword()\r\n    }\r\n    const updateInfor = () => {\r\n        if (!isName(fullName))\r\n            return setData({ ...data, err: \"Le nom est invalide.\", success: '' })\r\n\r\n        try {\r\n            axios.patch('/user/update', {\r\n                fullName: fullName ? fullName : user.fullName,\r\n                avatar: avatar ? avatar : user.avatar\r\n            }, {\r\n                headers: {\r\n                    'x-access-token': token\r\n                }\r\n            })\r\n\r\n            setData({ ...data, err: '', success: \"mise à jour Succès !\" })\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n    const updatePassword = () => {\r\n        if (isLength(motDePasse))\r\n            return setData({ ...data, err: \"Le mot de passe doit être au moins de 6 caractères.\", success: '' })\r\n\r\n        if (!isMatch(motDePasse, cf_motDePasse))\r\n            return setData({ ...data, err: \"Le mot de passe ne correspond pas.\", success: '' })\r\n\r\n        try {\r\n            axios.post('/user/reset', { motDePasse }, {\r\n                headers: {\r\n                    'x-access-token': token\r\n                }\r\n            })\r\n\r\n            setData({ ...data, err: '', success: \"mise à jour Succès!\" })\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SideMenu />\r\n            <HeaderSideBarre logo2={logo2} handleLogout={handleLogout} user={user} handelOpen={handelOpen} inactive={inactive} />\r\n            <div className='Big-container'>\r\n                <div className=\"title-box\">\r\n                    <div className='image-box'>\r\n                        <img src={logo2} />\r\n                    </div>\r\n                    <div className='nameUser'>\r\n                        {user.fullName}\r\n                    </div>\r\n                </div>\r\n                <div className='body-container'>\r\n                    <div className='col-left'>\r\n                        <div className='col-left-container'>\r\n                            <div className='title-col-left'>\r\n                                A propos\r\n                            </div>\r\n                            <div className='information-container'>\r\n                                <div>\r\n                                    name\r\n                                </div>\r\n                                <div>\r\n                                    {user.fullName}\r\n                                </div>\r\n                            </div>\r\n                            <div className='information-container'>\r\n                                <div className='title-item-box'>\r\n                                    telephone:\r\n                                </div>\r\n                                <div>\r\n                                    {user.telephone}\r\n                                </div>\r\n                            </div>\r\n                            <div className='information-container'>\r\n                                <div>\r\n                                    email:\r\n                                </div>\r\n                                <div>\r\n                                    {user.email}\r\n                                </div>\r\n                            </div>\r\n                            <div className='information-container'>\r\n                                <div>\r\n                                    role:\r\n                                </div>\r\n                                <div>\r\n                                    {user.role == 1 ? 'admin' : 'user'}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-left'>\r\n                            <div className='col-left-container'>\r\n                                <div className='title-col-left'>\r\n                                    confidentialté\r\n                                </div>\r\n                                <div className='information-container'>\r\n                                    <div>\r\n                                        name\r\n                                    </div>\r\n                                    <div>\r\n                                         ***********\r\n                                    </div>\r\n                                </div>\r\n                           \r\n                            </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoProfile\r\n","C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\reducers\\restaurantsReducer.js",[],"C:\\Users\\User\\Desktop\\BigNova Deliv\\LaLivraison\\front\\src\\redux\\actions\\restaurantsAction.js",[],{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","severity":1,"message":"399","line":5,"column":10,"nodeType":"400","messageId":"401","endLine":5,"endColumn":24},{"ruleId":"398","severity":1,"message":"402","line":5,"column":26,"nodeType":"400","messageId":"401","endLine":5,"endColumn":44},{"ruleId":"403","severity":1,"message":"404","line":24,"column":19,"nodeType":"405","messageId":"406","endLine":24,"endColumn":56},{"ruleId":"398","severity":1,"message":"407","line":37,"column":9,"nodeType":"400","messageId":"401","endLine":37,"endColumn":17},{"ruleId":"398","severity":1,"message":"408","line":41,"column":9,"nodeType":"400","messageId":"401","endLine":41,"endColumn":16},{"ruleId":"409","severity":1,"message":"410","line":60,"column":9,"nodeType":"411","messageId":"412","endLine":73,"endColumn":10},{"ruleId":"409","severity":1,"message":"413","line":61,"column":11,"nodeType":"411","messageId":"414","endLine":72,"endColumn":12},{"ruleId":"409","severity":1,"message":"410","line":76,"column":9,"nodeType":"411","messageId":"412","endLine":87,"endColumn":10},{"ruleId":"409","severity":1,"message":"410","line":90,"column":9,"nodeType":"411","messageId":"412","endLine":101,"endColumn":10},{"ruleId":"409","severity":1,"message":"410","line":104,"column":9,"nodeType":"411","messageId":"412","endLine":112,"endColumn":10},{"ruleId":"409","severity":1,"message":"413","line":105,"column":11,"nodeType":"411","messageId":"414","endLine":111,"endColumn":12},{"ruleId":"398","severity":1,"message":"415","line":138,"column":9,"nodeType":"400","messageId":"401","endLine":138,"endColumn":15},{"ruleId":"409","severity":1,"message":"410","line":4,"column":23,"nodeType":"411","messageId":"412","endLine":9,"endColumn":6},{"ruleId":"394","replacedBy":"416"},{"ruleId":"396","replacedBy":"417"},{"ruleId":"398","severity":1,"message":"418","line":11,"column":9,"nodeType":"400","messageId":"401","endLine":11,"endColumn":20},{"ruleId":"398","severity":1,"message":"419","line":12,"column":8,"nodeType":"400","messageId":"401","endLine":12,"endColumn":16},{"ruleId":"398","severity":1,"message":"420","line":40,"column":11,"nodeType":"400","messageId":"401","endLine":40,"endColumn":15},{"ruleId":"398","severity":1,"message":"421","line":40,"column":17,"nodeType":"400","messageId":"401","endLine":40,"endColumn":25},{"ruleId":"398","severity":1,"message":"422","line":40,"column":27,"nodeType":"400","messageId":"401","endLine":40,"endColumn":34},{"ruleId":"398","severity":1,"message":"423","line":14,"column":7,"nodeType":"400","messageId":"401","endLine":14,"endColumn":18},{"ruleId":"424","severity":1,"message":"425","line":14,"column":13,"nodeType":"426","endLine":14,"endColumn":25},{"ruleId":"424","severity":1,"message":"425","line":15,"column":13,"nodeType":"426","endLine":15,"endColumn":25},{"ruleId":"424","severity":1,"message":"425","line":16,"column":13,"nodeType":"426","endLine":16,"endColumn":25},{"ruleId":"424","severity":1,"message":"425","line":56,"column":7,"nodeType":"426","endLine":56,"endColumn":19},{"ruleId":"424","severity":1,"message":"425","line":57,"column":7,"nodeType":"426","endLine":57,"endColumn":19},{"ruleId":"424","severity":1,"message":"425","line":58,"column":7,"nodeType":"426","endLine":58,"endColumn":19},{"ruleId":"424","severity":1,"message":"425","line":59,"column":7,"nodeType":"426","endLine":59,"endColumn":19},{"ruleId":"424","severity":1,"message":"425","line":67,"column":10,"nodeType":"426","endLine":67,"endColumn":46},{"ruleId":"398","severity":1,"message":"427","line":64,"column":10,"nodeType":"400","messageId":"401","endLine":64,"endColumn":13},{"ruleId":"398","severity":1,"message":"428","line":64,"column":15,"nodeType":"400","messageId":"401","endLine":64,"endColumn":21},{"ruleId":"398","severity":1,"message":"429","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":15},{"ruleId":"398","severity":1,"message":"430","line":6,"column":22,"nodeType":"400","messageId":"401","endLine":6,"endColumn":28},{"ruleId":"398","severity":1,"message":"431","line":6,"column":49,"nodeType":"400","messageId":"401","endLine":6,"endColumn":53},{"ruleId":"432","severity":1,"message":"433","line":46,"column":18,"nodeType":"434","messageId":"406","endLine":46,"endColumn":21},{"ruleId":"435","severity":1,"message":"436","line":15,"column":5,"nodeType":"437","messageId":"406","endLine":15,"endColumn":14},{"ruleId":"398","severity":1,"message":"438","line":7,"column":10,"nodeType":"400","messageId":"401","endLine":7,"endColumn":21},{"ruleId":"398","severity":1,"message":"439","line":14,"column":3,"nodeType":"400","messageId":"401","endLine":14,"endColumn":9},{"ruleId":"398","severity":1,"message":"430","line":15,"column":3,"nodeType":"400","messageId":"401","endLine":15,"endColumn":9},{"ruleId":"398","severity":1,"message":"440","line":21,"column":8,"nodeType":"400","messageId":"401","endLine":21,"endColumn":14},{"ruleId":"432","severity":1,"message":"433","line":93,"column":24,"nodeType":"434","messageId":"406","endLine":93,"endColumn":27},{"ruleId":"398","severity":1,"message":"441","line":95,"column":10,"nodeType":"400","messageId":"401","endLine":95,"endColumn":23},{"ruleId":"398","severity":1,"message":"442","line":99,"column":9,"nodeType":"400","messageId":"401","endLine":99,"endColumn":19},{"ruleId":"398","severity":1,"message":"408","line":162,"column":9,"nodeType":"400","messageId":"401","endLine":162,"endColumn":16},{"ruleId":"398","severity":1,"message":"443","line":163,"column":9,"nodeType":"400","messageId":"401","endLine":163,"endColumn":17},{"ruleId":"398","severity":1,"message":"444","line":182,"column":15,"nodeType":"400","messageId":"401","endLine":182,"endColumn":18},{"ruleId":"398","severity":1,"message":"445","line":1,"column":10,"nodeType":"400","messageId":"401","endLine":1,"endColumn":17},{"ruleId":"398","severity":1,"message":"446","line":23,"column":15,"nodeType":"400","messageId":"401","endLine":23,"endColumn":18},{"ruleId":"398","severity":1,"message":"447","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":22},{"ruleId":"398","severity":1,"message":"448","line":2,"column":17,"nodeType":"400","messageId":"401","endLine":2,"endColumn":25},{"ruleId":"398","severity":1,"message":"449","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":18},{"ruleId":"398","severity":1,"message":"419","line":9,"column":8,"nodeType":"400","messageId":"401","endLine":9,"endColumn":16},{"ruleId":"435","severity":1,"message":"450","line":20,"column":13,"nodeType":"437","messageId":"406","endLine":20,"endColumn":21},{"ruleId":"398","severity":1,"message":"420","line":72,"column":13,"nodeType":"400","messageId":"401","endLine":72,"endColumn":17},{"ruleId":"398","severity":1,"message":"422","line":72,"column":29,"nodeType":"400","messageId":"401","endLine":72,"endColumn":36},{"ruleId":"409","severity":1,"message":"410","line":163,"column":1,"nodeType":"411","messageId":"412","endLine":163,"endColumn":11},{"ruleId":"409","severity":1,"message":"410","line":164,"column":1,"nodeType":"411","messageId":"412","endLine":164,"endColumn":22},{"ruleId":"409","severity":1,"message":"410","line":165,"column":1,"nodeType":"411","messageId":"412","endLine":179,"endColumn":110},{"ruleId":"409","severity":1,"message":"410","line":180,"column":1,"nodeType":"411","messageId":"412","endLine":184,"endColumn":123},{"ruleId":"409","severity":1,"message":"410","line":185,"column":1,"nodeType":"411","messageId":"412","endLine":186,"endColumn":122},{"ruleId":"409","severity":1,"message":"410","line":187,"column":1,"nodeType":"411","messageId":"412","endLine":187,"endColumn":15},{"ruleId":"409","severity":1,"message":"410","line":189,"column":1,"nodeType":"411","messageId":"412","endLine":189,"endColumn":11},{"ruleId":"409","severity":1,"message":"410","line":192,"column":1,"nodeType":"411","messageId":"412","endLine":192,"endColumn":11},{"ruleId":"403","severity":1,"message":"404","line":31,"column":16,"nodeType":"405","messageId":"406","endLine":31,"endColumn":53},{"ruleId":"398","severity":1,"message":"451","line":4,"column":29,"nodeType":"400","messageId":"401","endLine":4,"endColumn":35},{"ruleId":"398","severity":1,"message":"452","line":5,"column":10,"nodeType":"400","messageId":"401","endLine":5,"endColumn":20},{"ruleId":"398","severity":1,"message":"453","line":5,"column":22,"nodeType":"400","messageId":"401","endLine":5,"endColumn":36},{"ruleId":"398","severity":1,"message":"454","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":21},{"ruleId":"398","severity":1,"message":"455","line":10,"column":10,"nodeType":"400","messageId":"401","endLine":10,"endColumn":20},{"ruleId":"398","severity":1,"message":"456","line":12,"column":10,"nodeType":"400","messageId":"401","endLine":12,"endColumn":17},{"ruleId":"398","severity":1,"message":"457","line":31,"column":13,"nodeType":"400","messageId":"401","endLine":31,"endColumn":21},{"ruleId":"398","severity":1,"message":"458","line":31,"column":50,"nodeType":"400","messageId":"401","endLine":31,"endColumn":53},{"ruleId":"398","severity":1,"message":"459","line":31,"column":55,"nodeType":"400","messageId":"401","endLine":31,"endColumn":62},{"ruleId":"398","severity":1,"message":"460","line":34,"column":12,"nodeType":"400","messageId":"401","endLine":34,"endColumn":18},{"ruleId":"398","severity":1,"message":"461","line":34,"column":20,"nodeType":"400","messageId":"401","endLine":34,"endColumn":29},{"ruleId":"398","severity":1,"message":"462","line":35,"column":12,"nodeType":"400","messageId":"401","endLine":35,"endColumn":19},{"ruleId":"398","severity":1,"message":"463","line":48,"column":11,"nodeType":"400","messageId":"401","endLine":48,"endColumn":23},{"ruleId":"398","severity":1,"message":"464","line":57,"column":11,"nodeType":"400","messageId":"401","endLine":57,"endColumn":25},{"ruleId":"398","severity":1,"message":"421","line":47,"column":19,"nodeType":"400","messageId":"401","endLine":47,"endColumn":27},{"ruleId":"398","severity":1,"message":"465","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":23},{"ruleId":"398","severity":1,"message":"466","line":10,"column":44,"nodeType":"400","messageId":"401","endLine":10,"endColumn":51},{"ruleId":"398","severity":1,"message":"467","line":10,"column":57,"nodeType":"400","messageId":"401","endLine":10,"endColumn":62},{"ruleId":"398","severity":1,"message":"468","line":11,"column":12,"nodeType":"400","messageId":"401","endLine":11,"endColumn":18},{"ruleId":"398","severity":1,"message":"451","line":4,"column":29,"nodeType":"400","messageId":"401","endLine":4,"endColumn":35},{"ruleId":"398","severity":1,"message":"452","line":5,"column":10,"nodeType":"400","messageId":"401","endLine":5,"endColumn":20},{"ruleId":"398","severity":1,"message":"453","line":5,"column":22,"nodeType":"400","messageId":"401","endLine":5,"endColumn":36},{"ruleId":"398","severity":1,"message":"454","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":21},{"ruleId":"398","severity":1,"message":"455","line":10,"column":10,"nodeType":"400","messageId":"401","endLine":10,"endColumn":20},{"ruleId":"398","severity":1,"message":"456","line":12,"column":10,"nodeType":"400","messageId":"401","endLine":12,"endColumn":17},{"ruleId":"398","severity":1,"message":"469","line":12,"column":19,"nodeType":"400","messageId":"401","endLine":12,"endColumn":23},{"ruleId":"398","severity":1,"message":"470","line":28,"column":11,"nodeType":"400","messageId":"401","endLine":28,"endColumn":16},{"ruleId":"398","severity":1,"message":"471","line":33,"column":13,"nodeType":"400","messageId":"401","endLine":33,"endColumn":23},{"ruleId":"398","severity":1,"message":"457","line":36,"column":13,"nodeType":"400","messageId":"401","endLine":36,"endColumn":21},{"ruleId":"398","severity":1,"message":"458","line":36,"column":50,"nodeType":"400","messageId":"401","endLine":36,"endColumn":53},{"ruleId":"398","severity":1,"message":"459","line":36,"column":55,"nodeType":"400","messageId":"401","endLine":36,"endColumn":62},{"ruleId":"398","severity":1,"message":"460","line":43,"column":12,"nodeType":"400","messageId":"401","endLine":43,"endColumn":18},{"ruleId":"398","severity":1,"message":"461","line":43,"column":20,"nodeType":"400","messageId":"401","endLine":43,"endColumn":29},{"ruleId":"398","severity":1,"message":"462","line":44,"column":12,"nodeType":"400","messageId":"401","endLine":44,"endColumn":19},{"ruleId":"398","severity":1,"message":"472","line":65,"column":11,"nodeType":"400","messageId":"401","endLine":65,"endColumn":23},{"ruleId":"398","severity":1,"message":"463","line":84,"column":11,"nodeType":"400","messageId":"401","endLine":84,"endColumn":23},{"ruleId":"398","severity":1,"message":"464","line":88,"column":11,"nodeType":"400","messageId":"401","endLine":88,"endColumn":25},{"ruleId":"398","severity":1,"message":"473","line":156,"column":11,"nodeType":"400","messageId":"401","endLine":156,"endColumn":34},{"ruleId":"398","severity":1,"message":"422","line":10,"column":19,"nodeType":"400","messageId":"401","endLine":10,"endColumn":26},{"ruleId":"398","severity":1,"message":"474","line":24,"column":12,"nodeType":"400","messageId":"401","endLine":24,"endColumn":20},{"ruleId":"398","severity":1,"message":"475","line":24,"column":22,"nodeType":"400","messageId":"401","endLine":24,"endColumn":33},{"ruleId":"398","severity":1,"message":"452","line":7,"column":10,"nodeType":"400","messageId":"401","endLine":7,"endColumn":20},{"ruleId":"398","severity":1,"message":"453","line":7,"column":22,"nodeType":"400","messageId":"401","endLine":7,"endColumn":36},{"ruleId":"398","severity":1,"message":"458","line":21,"column":50,"nodeType":"400","messageId":"401","endLine":21,"endColumn":53},{"ruleId":"398","severity":1,"message":"459","line":21,"column":55,"nodeType":"400","messageId":"401","endLine":21,"endColumn":62},{"ruleId":"398","severity":1,"message":"462","line":23,"column":12,"nodeType":"400","messageId":"401","endLine":23,"endColumn":19},{"ruleId":"398","severity":1,"message":"474","line":24,"column":12,"nodeType":"400","messageId":"401","endLine":24,"endColumn":20},{"ruleId":"398","severity":1,"message":"475","line":24,"column":22,"nodeType":"400","messageId":"401","endLine":24,"endColumn":33},{"ruleId":"398","severity":1,"message":"422","line":26,"column":19,"nodeType":"400","messageId":"401","endLine":26,"endColumn":26},{"ruleId":"398","severity":1,"message":"476","line":40,"column":11,"nodeType":"400","messageId":"401","endLine":40,"endColumn":23},{"ruleId":"398","severity":1,"message":"463","line":68,"column":11,"nodeType":"400","messageId":"401","endLine":68,"endColumn":23},{"ruleId":"398","severity":1,"message":"477","line":72,"column":11,"nodeType":"400","messageId":"401","endLine":72,"endColumn":23},{"ruleId":"478","severity":1,"message":"479","line":122,"column":25,"nodeType":"426","endLine":122,"endColumn":44},{"ruleId":"480","severity":1,"message":"481","line":163,"column":48,"nodeType":"482","messageId":"406","endLine":163,"endColumn":50},"no-native-reassign",["483"],"no-negated-in-lhs",["484"],"no-unused-vars","'inscrireAction' is defined but never used.","Identifier","unusedVar","'authentifierAction' is defined but never used.","no-empty-character-class","Empty class.","Literal","unexpected","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","Nested block is redundant.","redundantNestedBlock","'result' is assigned a value but never used.",["483"],["484"],"'useDispatch' is defined but never used.","'SideMenu' is defined but never used.","'user' is assigned a value but never used.","'isLogged' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'autherColor' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'val' is assigned a value but never used.","'setVal' is assigned a value but never used.","'urlFond' is assigned a value but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","no-dupe-keys","Duplicate key 'minHeight'.","ObjectExpression","'createTheme' is defined but never used.","'Avatar' is defined but never used.","'decode' is defined but never used.","'fadeAnimation' is assigned a value but never used.","'mediaquery' is assigned a value but never used.","'location' is assigned a value but never used.","'res' is assigned a value but never used.","'Message' is defined but never used.","'tab' is assigned a value but never used.","'Paper' is defined but never used.","'useState' is defined but never used.","'Formulaire' is defined but never used.","Duplicate key 'position'.","'isName' is defined but never used.","'showErrMsg' is defined but never used.","'showSuccessMsg' is defined but never used.","'ShinBarreMenu' is defined but never used.","'IconButton' is defined but never used.","'NavLink' is defined but never used.","'fullName' is assigned a value but never used.","'err' is assigned a value but never used.","'success' is assigned a value but never used.","'avatar' is assigned a value but never used.","'setAvatar' is assigned a value but never used.","'loading' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'updatePassword' is assigned a value but never used.","'useRef' is defined but never used.","'onClick' is assigned a value but never used.","'exact' is assigned a value but never used.","'expand' is assigned a value but never used.","'Link' is defined but never used.","'users' is assigned a value but never used.","'restaurant' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'handelGetRestaurantInfo' is assigned a value but never used.","'callback' is assigned a value but never used.","'setCallback' is assigned a value but never used.","'changeAvatar' is assigned a value but never used.","'handleUpdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation"]