{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BigNova Deliv\\\\LaLivraison\\\\front\\\\src\\\\component\\\\chatBot\\\\ChatBot.js\",\n    _s = $RefreshSig$();\n\nimport Chatbot from 'react-chatbot-kit';\nimport config from './view/config';\nimport ActionProvider from './actionProvider';\nimport MessageParser from './messageParser';\nimport React, { useState } from 'react';\nimport { makeStyles, Button, IconButton, Paper, Icon, Fade } from '@material-ui/core';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => {\n  return {\n    chat: {\n      width: 275,\n      //275\n      height: 500,\n      backgroundColor: '#ae7419',\n      position: 'fixed',\n      bottom: 80,\n      right: 65,\n      zIndex: 15\n    },\n    button: {\n      backgroundColor: '#e32929',\n      position: 'fixed',\n      bottom: 0,\n      right: 0,\n      margin: 10,\n      zIndex: 15,\n      '&:hover': {\n        backgroundColor: '#e32929'\n      }\n    },\n    divBtn: {\n      borderRadius: 10,\n      alignSelf: \"flex-end\"\n    },\n    icons: {\n      color: '#fff'\n    }\n  };\n});\n\nconst ChatBot = ({}) => {\n  _s();\n\n  const classes = useStyles();\n  const [visible, setVisibile] = useState(false);\n\n  const scroller = () => {\n    if (window.pageYOffset > 150) {\n      setVisibile(true);\n    } else {\n      setVisibile(false);\n    }\n  };\n\n  window.addEventListener('scroll', scroller);\n  const [open, setOpen] = useState(false);\n  const [displayContainer, setDisplay] = useState('none');\n  const [animate, setAnimate] = useState(false);\n\n  const handelClick = () => {\n    setAnimate(true);\n    setOpen(true);\n    setDisplay('block');\n  };\n\n  const handelClose = () => {\n    setTimeout(() => {\n      setOpen(false);\n    }, 150);\n    setAnimate(false);\n    setDisplay('none');\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chat,\n      style: {\n        display: `${displayContainer}`\n      },\n      children: open && /*#__PURE__*/_jsxDEV(Fade, {\n        in: animate,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 5,\n          children: /*#__PURE__*/_jsxDEV(Chatbot, {\n            config: config,\n            messageParser: MessageParser,\n            actionProvider: ActionProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), visible && /*#__PURE__*/_jsxDEV(Fade, {\n      in: visible,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.divBtn,\n        children: open ? /*#__PURE__*/_jsxDEV(IconButton, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handelClose,\n          className: classes.button,\n          children: /*#__PURE__*/_jsxDEV(CancelRoundedIcon, {\n            fontSize: \"large\",\n            className: classes.icons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n          className: classes.button,\n          onClick: handelClick,\n          children: /*#__PURE__*/_jsxDEV(ChatIcon, {\n            fontSize: \"large\",\n            className: classes.icons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatBot, \"9pvsaI6bYqNaW7Kt6mxyJI1rqxo=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChatBot;\nexport default ChatBot;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"sources":["C:/Users/User/Desktop/BigNova Deliv/LaLivraison/front/src/component/chatBot/ChatBot.js"],"names":["Chatbot","config","ActionProvider","MessageParser","React","useState","makeStyles","Button","IconButton","Paper","Icon","Fade","ChatIcon","CancelRoundedIcon","useStyles","theme","chat","width","height","backgroundColor","position","bottom","right","zIndex","button","margin","divBtn","borderRadius","alignSelf","icons","color","ChatBot","classes","visible","setVisibile","scroller","window","pageYOffset","addEventListener","open","setOpen","displayContainer","setDisplay","animate","setAnimate","handelClick","handelClose","setTimeout","display"],"mappings":"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","sourcesContent":["import Chatbot from 'react-chatbot-kit';\r\nimport config from './view/config';\r\nimport ActionProvider from './actionProvider';\r\nimport MessageParser from './messageParser';\r\nimport React, { useState } from 'react';\r\nimport { makeStyles, Button, IconButton, Paper, Icon, Fade } from '@material-ui/core';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n\r\n    return {\r\n\r\n        chat: {\r\n            width: 275, //275\r\n            height: 500,\r\n            backgroundColor: '#ae7419',\r\n\r\n            position: 'fixed',\r\n            bottom: 80, right: 65,\r\n\r\n            zIndex: 15,\r\n\r\n\r\n\r\n\r\n        },\r\n        button: {\r\n            backgroundColor: '#e32929',\r\n            position: 'fixed',\r\n            bottom: 0, right: 0,\r\n            margin: 10, zIndex: 15,\r\n\r\n            '&:hover': { backgroundColor: '#e32929', }\r\n        },\r\n        divBtn: {\r\n            borderRadius: 10,\r\n            alignSelf: \"flex-end\",\r\n\r\n        }, icons: {\r\n            color: '#fff',\r\n\r\n        }\r\n    }\r\n})\r\nconst ChatBot = ({ }) => {\r\n    const classes = useStyles();\r\n    const [visible, setVisibile] = useState(false);\r\n    const scroller = () => {\r\n        if (window.pageYOffset > 150) { setVisibile(true); }\r\n        else { setVisibile(false); }\r\n    }\r\n\r\n    window.addEventListener('scroll', scroller);\r\n\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [displayContainer, setDisplay] = useState('none');\r\n    const [animate, setAnimate] = useState(false);\r\n    const handelClick = () => {\r\n\r\n        setAnimate(true)\r\n        setOpen(true);\r\n        setDisplay('block')\r\n    }\r\n\r\n    const handelClose = () => {\r\n        setTimeout(() => {\r\n            setOpen(false)\r\n        }, 150);\r\n        setAnimate(false);\r\n        setDisplay('none')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n\r\n            <div className={classes.chat} style={{ display: `${displayContainer}` }}>\r\n                {open &&\r\n                    <Fade in={animate}>\r\n                        <Paper elevation={5}>\r\n                            <Chatbot\r\n                                config={config}\r\n                                messageParser={MessageParser}\r\n                                actionProvider={ActionProvider}\r\n                            />\r\n                        </Paper>\r\n                    </Fade>\r\n                }\r\n            </div>\r\n\r\n\r\n            {visible && (\r\n                <Fade in={visible} >\r\n                    <div className={classes.divBtn}>\r\n\r\n\r\n\r\n\r\n                        {open ? (\r\n\r\n                            <IconButton variant='contained' color=\"secondary\" onClick={handelClose} className={classes.button}>\r\n                                <CancelRoundedIcon fontSize='large' className={classes.icons} />\r\n                            </IconButton>) :\r\n\r\n\r\n\r\n\r\n                            (<IconButton className={classes.button} onClick={handelClick}>\r\n                                <ChatIcon fontSize='large' className={classes.icons} />\r\n                            </IconButton>)\r\n\r\n                        }\r\n\r\n\r\n                    </div>\r\n                </Fade>\r\n            )}\r\n\r\n\r\n\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ChatBot"]},"metadata":{},"sourceType":"module"}