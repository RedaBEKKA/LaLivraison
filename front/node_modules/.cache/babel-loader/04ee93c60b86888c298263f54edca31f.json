{"ast":null,"code":"import ACTIONS from './index';\nimport axios from 'axios';\nexport const dispatchLogin = () => {\n  return {\n    type: ACTIONS.LOGIN\n  };\n};\nexport const fetchUser = async token => {\n  // console.log(`token fetchUserfetchUserfetchUser`, token)\n  // Headers: {'x-access-token': token}\n  const config = {\n    headers: {//     'accept': 'application/json',\n      //    'Content-type': 'application/json',\n      //    'Access-Control-Allow-Headers':{ 'x-access-token': token },\n      //    'X-WP-Nonce': 'my-wp-nonce-here',\n    }\n  };\n  const res = await axios.get('/user/info', {\n    headers: {\n      Authorization: token\n    }\n  });\n  console.log(`res`, res);\n  return res;\n};\nexport const dispatchGetUser = res => {\n  return {\n    type: ACTIONS.GET_USER,\n    payload: {\n      user: res.data //isAdmin: res.data.role === 1 ? true : false\n\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/BigNova Deliv/LaLivraison/front/src/redux/actions/authAction.js"],"names":["ACTIONS","axios","dispatchLogin","type","LOGIN","fetchUser","token","config","headers","res","get","Authorization","console","log","dispatchGetUser","GET_USER","payload","user","data"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAEH,OAAO,CAACI;AADX,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,SAAS,GAAG,MAAOC,KAAP,IAAiB;AACtC;AACA;AACA,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE,CACT;AACA;AACA;AACA;AAJS;AADE,GAAf;AASA,QAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,YAAV,EAAwB;AACtCF,IAAAA,OAAO,EAAE;AAACG,MAAAA,aAAa,EAAEL;AAAhB;AAD6B,GAAxB,CAAlB;AAGAM,EAAAA,OAAO,CAACC,GAAR,CAAa,KAAb,EAAmBJ,GAAnB;AACA,SAAOA,GAAP;AACH,CAjBM;AAmBP,OAAO,MAAMK,eAAe,GAAIL,GAAD,IAAS;AACpC,SAAO;AACHN,IAAAA,IAAI,EAAEH,OAAO,CAACe,QADX;AAEHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAER,GAAG,CAACS,IADL,CAGL;;AAHK;AAFN,GAAP;AAQH,CATM","sourcesContent":["import ACTIONS from './index'\r\nimport axios from 'axios'\r\n\r\nexport const dispatchLogin = () => {\r\n    return {\r\n        type: ACTIONS.LOGIN\r\n    }\r\n}\r\n\r\nexport const fetchUser = async (token) => {\r\n    // console.log(`token fetchUserfetchUserfetchUser`, token)\r\n    // Headers: {'x-access-token': token}\r\n    const config = {\r\n        headers: {\r\n        //     'accept': 'application/json',\r\n        //    'Content-type': 'application/json',\r\n        //    'Access-Control-Allow-Headers':{ 'x-access-token': token },\r\n        //    'X-WP-Nonce': 'my-wp-nonce-here',\r\n           \r\n         },\r\n    };\r\n    const res = await axios.get('/user/info', {\r\n        headers: {Authorization: token}\r\n    })\r\n    console.log(`res`, res)\r\n    return res\r\n}\r\n\r\nexport const dispatchGetUser = (res) => {\r\n    return {\r\n        type: ACTIONS.GET_USER,\r\n        payload: {\r\n            user: res.data,\r\n\r\n            //isAdmin: res.data.role === 1 ? true : false\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}