{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BigNova Deliv\\\\LaLivraison\\\\front\\\\src\\\\component\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { isLength, isMatch, isName } from '../../utils/validation/Validation';\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/notification';\nimport { fetchAllUsers, dispatchGetAllUsers } from '../../redux/actions/usersAction';\nimport ShinBarreMenu from '../newBarreMenu/shinBarreMenu';\nimport SideMenu from '../SideMenu/SideMenuAdmin';\nimport { IconButton } from '@material-ui/core';\nimport logo2 from \"../../assets/user.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  fullName: '',\n  motDePasse: '',\n  cf_motDePasse: '',\n  err: '',\n  success: ''\n};\n\nfunction Profile() {\n  _s();\n\n  const auth = useSelector(state => state.auth);\n  const token = useSelector(state => state.token);\n  const users = useSelector(state => state.users);\n  console.log('users', users);\n  const {\n    user,\n    isAdmin\n  } = auth;\n  const [data, setData] = useState(initialState);\n  const {\n    fullName,\n    motDePasse,\n    cf_motDePasse,\n    err,\n    success\n  } = data;\n  const [avatar, setAvatar] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [callback, setCallback] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isAdmin) {\n      fetchAllUsers(token).then(res => {\n        dispatch(dispatchGetAllUsers(res));\n      });\n    }\n  }, [token, isAdmin, dispatch, callback]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value,\n      err: '',\n      success: ''\n    });\n  };\n\n  const changeAvatar = async e => {\n    e.preventDefault();\n\n    try {\n      const file = e.target.files[0];\n      if (!file) return setData({ ...data,\n        err: \"No files were uploaded.\",\n        success: ''\n      });\n      if (file.size > 1024 * 1024) return setData({ ...data,\n        err: \"Size too large.\",\n        success: ''\n      });\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') return setData({ ...data,\n        err: \"File format is incorrect.\",\n        success: ''\n      });\n      let formData = new FormData();\n      formData.append('file', file);\n      setLoading(true);\n      const res = await axios.post('/api/upload_avatar', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          'x-access-token': token\n        }\n      });\n      setLoading(false);\n      setAvatar(res.data.url);\n    } catch (err) {\n      setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const updateInfor = () => {\n    if (!isName(fullName)) return setData({ ...data,\n      err: \"Le nom est invalide.\",\n      success: ''\n    });\n\n    try {\n      axios.patch('/user/update', {\n        fullName: fullName ? fullName : user.fullName,\n        avatar: avatar ? avatar : user.avatar\n      }, {\n        headers: {\n          'x-access-token': token\n        }\n      });\n      setData({ ...data,\n        err: '',\n        success: \"mise à jour Succès !\"\n      });\n    } catch (err) {\n      setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const updatePassword = () => {\n    if (isLength(motDePasse)) return setData({ ...data,\n      err: \"Le mot de passe doit être au moins de 6 caractères.\",\n      success: ''\n    });\n    if (!isMatch(motDePasse, cf_motDePasse)) return setData({ ...data,\n      err: \"Le mot de passe ne correspond pas.\",\n      success: ''\n    });\n\n    try {\n      axios.post('/user/reset', {\n        motDePasse\n      }, {\n        headers: {\n          'x-access-token': token\n        }\n      });\n      setData({ ...data,\n        err: '',\n        success: \"mise à jour Succès!\"\n      });\n    } catch (err) {\n      setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const handleUpdate = () => {\n    if (fullName || avatar) updateInfor();\n    if (motDePasse) updatePassword();\n  };\n\n  const handleDelete = async id => {\n    try {\n      if (user._id !== id) {\n        if (window.confirm(\"Are you sure you want to delete this account?\")) {\n          setLoading(true);\n          await axios.delete(`/user/delete/${id}`, {\n            headers: {\n              'x-access-token': token\n            }\n          });\n          setLoading(false);\n          setCallback(!callback);\n        }\n      }\n    } catch (err) {\n      setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menue\",\n      children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-box\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"BigNova\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span\",\n            children: \".Deliv\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"big-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-profile\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-img-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: logo2,\n                alt: \"user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nameContainer\",\n              children: user.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"bi bi-caret-down-fill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slid-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"mon Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"seting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"se deconnecter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile_page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isAdmin ? \"Users\" : \"My Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflowX: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"customers\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.role === 1 ? /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-check\",\n                    title: \"Admin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 59\n                  }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-times\",\n                    title: \"User\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 59\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: `/edit_user/${user._id}`,\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-edit\",\n                      title: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-trash-alt\",\n                    title: \"Remove\",\n                    onClick: () => handleDelete(user._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 45\n                }, this)]\n              }, user._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Profile, \"mXYBK9iiTRj/f3e9KzFQ9uYGHtM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/User/Desktop/BigNova Deliv/LaLivraison/front/src/component/profile/Profile.js"],"names":["React","useState","useEffect","axios","useSelector","useDispatch","Link","isLength","isMatch","isName","showErrMsg","showSuccessMsg","fetchAllUsers","dispatchGetAllUsers","ShinBarreMenu","SideMenu","IconButton","logo2","initialState","fullName","motDePasse","cf_motDePasse","err","success","Profile","auth","state","token","users","console","log","user","isAdmin","data","setData","avatar","setAvatar","loading","setLoading","callback","setCallback","dispatch","then","res","handleChange","e","name","value","target","changeAvatar","preventDefault","file","files","size","type","formData","FormData","append","post","headers","url","response","msg","updateInfor","patch","updatePassword","handleUpdate","handleDelete","id","_id","window","confirm","delete","overflowX","map","email","role"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { isLength, isMatch, isName } from '../../utils/validation/Validation'\r\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/notification'\r\n\r\nimport { fetchAllUsers, dispatchGetAllUsers } from '../../redux/actions/usersAction'\r\nimport ShinBarreMenu from '../newBarreMenu/shinBarreMenu'\r\nimport SideMenu from '../SideMenu/SideMenuAdmin'\r\nimport { IconButton } from '@material-ui/core'\r\nimport logo2 from \"../../assets/user.jpg\";\r\n\r\nconst initialState = {\r\n    fullName: '',\r\n    motDePasse: '',\r\n    cf_motDePasse: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction Profile() {\r\n    const auth = useSelector(state => state.auth)\r\n    const token = useSelector(state => state.token)\r\n\r\n    const users = useSelector(state => state.users)\r\n    console.log('users', users)\r\n    const { user, isAdmin } = auth\r\n    const [data, setData] = useState(initialState)\r\n    const { fullName, motDePasse, cf_motDePasse, err, success } = data\r\n\r\n    const [avatar, setAvatar] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [callback, setCallback] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (isAdmin) {\r\n            fetchAllUsers(token).then(res => {\r\n                dispatch(dispatchGetAllUsers(res))\r\n            })\r\n        }\r\n    }, [token, isAdmin, dispatch, callback])\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setData({ ...data, [name]: value, err: '', success: '' })\r\n    }\r\n\r\n    const changeAvatar = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const file = e.target.files[0]\r\n\r\n            if (!file) return setData({ ...data, err: \"No files were uploaded.\", success: '' })\r\n\r\n            if (file.size > 1024 * 1024)\r\n                return setData({ ...data, err: \"Size too large.\", success: '' })\r\n\r\n            if (file.type !== 'image/jpeg' && file.type !== 'image/png')\r\n                return setData({ ...data, err: \"File format is incorrect.\", success: '' })\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_avatar', formData, {\r\n                headers: { 'content-type': 'multipart/form-data', 'x-access-token': token }\r\n            })\r\n\r\n            setLoading(false)\r\n            setAvatar(res.data.url)\r\n\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    const updateInfor = () => {\r\n        if (!isName(fullName))\r\n            return setData({ ...data, err: \"Le nom est invalide.\", success: '' })\r\n\r\n        try {\r\n            axios.patch('/user/update', {\r\n                fullName: fullName ? fullName : user.fullName,\r\n                avatar: avatar ? avatar : user.avatar\r\n            }, {\r\n                headers: {\r\n                    'x-access-token': token\r\n                }\r\n            })\r\n\r\n            setData({ ...data, err: '', success: \"mise à jour Succès !\" })\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    const updatePassword = () => {\r\n        if (isLength(motDePasse))\r\n            return setData({ ...data, err: \"Le mot de passe doit être au moins de 6 caractères.\", success: '' })\r\n\r\n        if (!isMatch(motDePasse, cf_motDePasse))\r\n            return setData({ ...data, err: \"Le mot de passe ne correspond pas.\", success: '' })\r\n\r\n        try {\r\n            axios.post('/user/reset', { motDePasse }, {\r\n                headers: {\r\n                    'x-access-token': token\r\n                }\r\n            })\r\n\r\n            setData({ ...data, err: '', success: \"mise à jour Succès!\" })\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (fullName || avatar) updateInfor()\r\n        if (motDePasse) updatePassword()\r\n    }\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            if (user._id !== id) {\r\n                if (window.confirm(\"Are you sure you want to delete this account?\")) {\r\n                    setLoading(true)\r\n                    await axios.delete(`/user/delete/${id}`, {\r\n                        headers: {\r\n                            'x-access-token': token\r\n                        }\r\n                    })\r\n                    setLoading(false)\r\n                    setCallback(!callback)\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='menue'>\r\n                <SideMenu />\r\n\r\n            </div>\r\n\r\n            <div className='container-header' >\r\n                <div className='left-box'>\r\n                    <p  >BigNova<span className='span'>.Deliv</span ></p>\r\n                </div>\r\n                <div className='right-box'>\r\n                    <div className='big-box'>\r\n                        <div className='box-profile' >\r\n                            <div className='profile-img-container'>\r\n                                <img src={logo2} alt=\"user\" />\r\n                            </div>\r\n                            <div className='nameContainer'>\r\n                                {user.fullName}\r\n                            </div>\r\n                            <div className='box-icon'>\r\n                                <i class=\"bi bi-caret-down-fill\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div className='slid-box'>\r\n                            <div>\r\n                                mon Profile\r\n                            </div>\r\n                            <div>\r\n                                seting\r\n                            </div>\r\n                            <div>\r\n                                se deconnecter\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"profile_page\">\r\n                <div className=\"col-right\">\r\n                    <h2>{isAdmin ? \"Users\" : \"My Orders\"}</h2>\r\n\r\n                    <div style={{ overflowX: \"auto\" }}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Admin</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    users.map(user => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.fullName}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    user.role === 1\r\n                                                        ? <i className=\"fas fa-check\" title=\"Admin\"></i>\r\n                                                        : <i className=\"fas fa-times\" title=\"User\"></i>\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={`/edit_user/${user._id}`}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <i className=\"fas fa-trash-alt\" title=\"Remove\"\r\n                                                    onClick={() => handleDelete(user._id)} ></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"col-left\">\r\n                    <div>\r\n                        {err && showErrMsg(err)}\r\n                        {success && showSuccessMsg(success)}\r\n                        {loading && <h3>Loading.....</h3>}\r\n                    </div>\r\n                    <h2>{isAdmin ? \"Admin Profile\" : \"User Profile\"}</h2>\r\n\r\n                    <div className=\"avatar\">\r\n                        <img src={avatar ? avatar : user.avatar} alt=\"\" />\r\n                        <span>\r\n                            <i className=\"fas fa-camera\"></i>\r\n                            <p>Change</p>\r\n                            <input type=\"file\" name=\"file\" id=\"file_up\" onChange={changeAvatar} />\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Nom</label>\r\n                        <input type=\"text\" name=\"fullName\" id=\"fullName\" defaultValue={user.fullName}\r\n                            placeholder=\"Your name\" onChange={handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">E-mail</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" defaultValue={user.email}\r\n                            placeholder=\"Your email address\" disabled />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">nouveau mot de passe</label>\r\n                        <input type=\"password\" name=\"motDePasse\" id=\"motDePasse\" defaultValue=''\r\n                            placeholder=\"Your password\" value={motDePasse} onChange={handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"cf_motDePasse\">Confirmer le nouveau mot de passe</label>\r\n                        <input type=\"password\" name=\"cf_motDePasse\" id=\"cf_motDePasse\" defaultValue=''\r\n                            placeholder=\"Confirm password\" value={cf_motDePasse} onChange={handleChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <em style={{ color: \"crimson\" }}>\r\n                            * Si vous mettez à jour votre mot de passe ici, vous ne pourrez pas\r\n                            pour vous connecter rapidement en utilisant google et facebook.\r\n                        </em>\r\n                    </div>\r\n\r\n                    <button disabled={loading} onClick={handleUpdate}>Update</button>\r\n                </div>\r\n */}\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}