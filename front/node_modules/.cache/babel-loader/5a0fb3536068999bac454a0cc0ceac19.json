{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BigNova Deliv\\\\LaLivraison\\\\front\\\\src\\\\component\\\\Fomulaire\\\\Formulaire.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Typography } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { inscrireAction, authentifierAction } from \"../../redux/actions/user\";\nimport useStyles from \"./styles\";\nimport NewInput from \"./newInput\"; //const photoUrl = process.env.PUBLIC_URL + \"images/register.svg\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialForm = {\n  fullName: \"\",\n  telephone: \"\",\n  motDePasse: \"\"\n}; //variables\n\nvar telOk = false;\nvar nomOk = false;\nvar mdpOk = false;\nvar confirmMdpOk = false;\nvar telError = false;\nvar nomError = false;\nvar mdpError = false; ////REGEX ///\n\nconst passwordRegex = /^(?=.*\\d)([a-zA-Z\\d]{8,})$/; //\n\nconst nameRegex = /^([a-zA-Z]+[ ]?|[a-zA-Z]+['-]?[])+$/;\nconst numRegex = /(0|\\+213)[5-7]([0-9]{2}){4}$/;\nconst helperTel = \"le numero doit etre composÃ© de 10 chiffre\";\nconst helperName = \"require un nom valide\";\nconst helperMdp = \"exemple de mot de passe valide :145Badios# \";\nconst helperConfirmPassword = \"mot de passe different\";\n\nconst Formulaire = () => {\n  _s();\n\n  //styles\n  const classes = useStyles(); //react -redux\n\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state); //react router\n\n  const history = useHistory(); //states\n\n  const [informations, setInformations] = useState(initialForm);\n  const [confirmMdpError, setConfirmMdpError] = useState(false);\n  const [errorServer, setErrorServer] = useState(false);\n  const [slideClass, setSlideClass] = useState(null);\n  const [seConnecter, setSeconnecter] = useState(true); // false ==> inscrire\n\n  const [mdpConfirmation, setMdpConfirmation] = useState(\"\");\n  useEffect(() => {\n    setErrorServer(false);\n  }, [seConnecter]); // functions\n\n  const handelChange = e => {\n    switch (e.target.name) {\n      case \"fullName\":\n        {\n          {\n            if (e.target.value === \"\") {\n              nomError = false;\n              nomOk = false;\n            } else if (nameRegex.test(e.target.value)) {\n              nomError = false;\n              nomOk = true;\n            } else {\n              nomError = true;\n              nomOk = false;\n            }\n          }\n        }\n        break;\n\n      case \"telephone\":\n        {\n          if (e.target.value === \"\") {\n            telError = false;\n            telOk = false;\n          } else if (numRegex.test(e.target.value)) {\n            telError = false;\n            telOk = true;\n          } else {\n            telError = true;\n            telOk = false;\n          }\n        }\n        break;\n\n      case \"motDePasse\":\n        {\n          if (e.target.value === \"\") {\n            mdpError = false;\n            mdpOk = false;\n          } else if (passwordRegex.test(e.target.value)) {\n            mdpError = false;\n            mdpOk = true;\n          } else {\n            mdpError = true;\n            mdpOk = false;\n          }\n        }\n        break;\n\n      case \"confirmedPassword\":\n        {\n          {\n            setMdpConfirmation(e.target.value);\n\n            if (e.target.value === \"\") {\n              confirmMdpOk = false;\n              setConfirmMdpError(false);\n            }\n          }\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    if (seConnecter) {\n      nomOk = true;\n    }\n\n    setInformations({ ...informations,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n\n    if (seConnecter) {\n      confirmMdpOk = true;\n    } else {\n      if (informations.motDePasse === mdpConfirmation) {\n        confirmMdpOk = true;\n        setConfirmMdpError(false);\n      } else {\n        confirmMdpOk = false;\n        setConfirmMdpError(true);\n      }\n    }\n\n    let result = telOk && nomOk && mdpOk && confirmMdpOk;\n\n    if (result) {\n      setErrorServer(true);\n\n      if (seConnecter) {\n        dispatch(authentifierAction({\n          telephone: informations.telephone,\n          motDePasse: informations.motDePasse\n        }, history));\n      } else {\n        dispatch(inscrireAction({ ...informations,\n          dateCreation: new Date()\n        }, history));\n      }\n    }\n  };\n\n  const handelClassChanges = () => {\n    if (slideClass === null) {\n      setSlideClass(classes.sliderAnimatedLeftToRight);\n    } else {\n      if (slideClass === classes.sliderAnimatedRightToLeft) {\n        setSlideClass(classes.sliderAnimatedLeftToRight);\n      } else {\n        setSlideClass(classes.sliderAnimatedRightToLeft);\n      }\n    }\n\n    setTimeout(() => {\n      setSeconnecter(!seConnecter);\n    }, 750);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.slider} ${slideClass}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.slideText,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", seConnecter ? \"Bienvenue\" : \"Comment vas-tu\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.TextP,\n          children: seConnecter ? \"venez avec nous en enfer et cree un compte \" : \"vous etes deja inscrit , alors connectez vous \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handelClassChanges,\n        className: classes.bouton,\n        children: seConnecter ? \"inscription\" : \"connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.insciptionPart,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.titreInscrption,\n        children: seConnecter ? \"connectez-vous\" : \"Inscrivez-vous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.inscForm,\n        onSubmit: handelSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: seConnecter ? classes.InputsdivAuth : classes.InputdivInsc,\n          children: [!seConnecter && /*#__PURE__*/_jsxDEV(NewInput, {\n            name: \"fullName\",\n            label: \"   full Name\",\n            handelChange: handelChange,\n            type: \"text\",\n            error: nomError //  helperText={nomError ?  helperName : null}\n            ,\n            helperText: helperName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NewInput, {\n            name: \"telephone\",\n            label: \"   Email\",\n            handelChange: handelChange,\n            type: \"text\",\n            error: telError //  helperText={telError ? helperTel : null}\n            ,\n            helperText: helperTel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.forgotPassword,\n            children: [/*#__PURE__*/_jsxDEV(NewInput, {\n              name: \"motDePasse\",\n              label: \"   Mot de passe \",\n              handelChange: handelChange,\n              error: mdpError,\n              type: \"password\" //  helperText={mdpError ?  helperMdp : null}\n              ,\n              helperText: helperMdp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), seConnecter && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              variant: \"text\",\n              style: {\n                fontSize: \"11\",\n                color: \"black\",\n                background: \"#fff\",\n                marginTop: \"5px\",\n                padding: 5,\n                borderRadius: \"8px\",\n                transform: \"translateY(5px)\",\n                justifyContent: \"flex-end\",\n                alignItems: \"flex-end\",\n                display: \"flex\"\n              },\n              children: \"mot de passe oubli\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), !seConnecter && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.confirmMdp,\n            children: /*#__PURE__*/_jsxDEV(NewInput, {\n              name: \"confirmedPassword\",\n              label: \"   Confirmation mot de passe\",\n              type: \"password\",\n              handelChange: handelChange,\n              error: confirmMdpError // helperText={confirmMdpError ? helperConfirmPassword : null}\n              ,\n              helperText: helperConfirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          className: classes.bouton,\n          type: \"submit\",\n          children: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), errorServer ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: selector.userReducer.erreur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 10\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Formulaire, \"g5FTu9s9EsjqCw3mQmzimKL/RxE=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useHistory];\n});\n\n_c = Formulaire;\nexport default Formulaire; // devlopor\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulaire\");","map":{"version":3,"sources":["C:/Users/User/Desktop/BigNova Deliv/LaLivraison/front/src/component/Fomulaire/Formulaire.js"],"names":["Button","Typography","React","useState","useEffect","useDispatch","useSelector","useHistory","inscrireAction","authentifierAction","useStyles","NewInput","initialForm","fullName","telephone","motDePasse","telOk","nomOk","mdpOk","confirmMdpOk","telError","nomError","mdpError","passwordRegex","nameRegex","numRegex","helperTel","helperName","helperMdp","helperConfirmPassword","Formulaire","classes","dispatch","selector","state","history","informations","setInformations","confirmMdpError","setConfirmMdpError","errorServer","setErrorServer","slideClass","setSlideClass","seConnecter","setSeconnecter","mdpConfirmation","setMdpConfirmation","handelChange","e","target","name","value","test","handelSubmit","preventDefault","result","dateCreation","Date","handelClassChanges","sliderAnimatedLeftToRight","sliderAnimatedRightToLeft","setTimeout","container","slider","slideText","TextP","bouton","insciptionPart","titreInscrption","inscForm","InputsdivAuth","InputdivInsc","forgotPassword","fontSize","color","background","marginTop","padding","borderRadius","transform","justifyContent","alignItems","display","confirmMdp","userReducer","erreur"],"mappings":"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","sourcesContent":["import { Button, Typography } from \"@material-ui/core\";\r\nimport React, { useState , useEffect} from \"react\";\r\nimport { useDispatch ,useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { inscrireAction, authentifierAction } from \"../../redux/actions/user\";\r\nimport useStyles from \"./styles\";\r\nimport NewInput from \"./newInput\";\r\n\r\n//const photoUrl = process.env.PUBLIC_URL + \"images/register.svg\";\r\nconst initialForm = { fullName: \"\", telephone: \"\", motDePasse: \"\" };\r\n\r\n//variables\r\nvar telOk = false;\r\nvar nomOk = false;\r\nvar mdpOk = false;\r\nvar confirmMdpOk = false;\r\nvar telError = false;\r\nvar nomError = false;\r\nvar mdpError = false;\r\n\r\n////REGEX ///\r\n\r\nconst passwordRegex = /^(?=.*\\d)([a-zA-Z\\d]{8,})$/; //\r\nconst nameRegex = /^([a-zA-Z]+[ ]?|[a-zA-Z]+['-]?[])+$/;\r\nconst numRegex = /(0|\\+213)[5-7]([0-9]{2}){4}$/;\r\n\r\nconst helperTel = \"le numero doit etre composÃ© de 10 chiffre\";\r\nconst helperName = \"require un nom valide\";\r\nconst helperMdp = \"exemple de mot de passe valide :145Badios# \";\r\nconst helperConfirmPassword = \"mot de passe different\";\r\n\r\nconst Formulaire = () => {\r\n  //styles\r\n  const classes = useStyles();\r\n\r\n  //react -redux\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector( state => state)\r\n \r\n  //react router\r\n  const history = useHistory();\r\n\r\n  //states\r\n  const [informations, setInformations] = useState(initialForm);\r\n  const [confirmMdpError, setConfirmMdpError] = useState(false);\r\n  const [errorServer , setErrorServer] = useState(false) ; \r\n  const [slideClass, setSlideClass] = useState(null);\r\n  const [seConnecter, setSeconnecter] = useState(true); // false ==> inscrire\r\n  const [mdpConfirmation, setMdpConfirmation] = useState(\"\");\r\n\r\n  useEffect(()=>{\r\n      setErrorServer(false)\r\n  },[seConnecter])\r\n\r\n\r\n  // functions\r\n  const handelChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"fullName\":\r\n        {\r\n          {\r\n            if (e.target.value === \"\") {\r\n              nomError = false;\r\n              nomOk = false;\r\n            } else if (nameRegex.test(e.target.value)) {\r\n              nomError = false;\r\n              nomOk = true;\r\n            } else {\r\n              nomError = true;\r\n              nomOk = false;\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case \"telephone\":\r\n        {\r\n          if (e.target.value === \"\") {\r\n            telError = false;\r\n            telOk = false;\r\n          } else if (numRegex.test(e.target.value)) {\r\n            telError = false;\r\n            telOk = true;\r\n          } else {\r\n            telError = true;\r\n            telOk = false;\r\n          }\r\n        }\r\n        break;\r\n      case \"motDePasse\":\r\n        {\r\n          if (e.target.value === \"\") {\r\n            mdpError = false;\r\n            mdpOk = false;\r\n          } else if (passwordRegex.test(e.target.value)) {\r\n            mdpError = false;\r\n            mdpOk = true;\r\n          } else {\r\n            mdpError = true;\r\n            mdpOk = false;\r\n          }\r\n        }\r\n        break;\r\n      case \"confirmedPassword\":\r\n        {\r\n          {\r\n            setMdpConfirmation(e.target.value);\r\n            if (e.target.value === \"\") {\r\n              confirmMdpOk = false;\r\n              setConfirmMdpError(false);\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (seConnecter) {\r\n      nomOk = true;\r\n    }\r\n    setInformations({ ...informations, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (seConnecter) {\r\n      confirmMdpOk = true;\r\n    } else {\r\n      if (informations.motDePasse === mdpConfirmation) {\r\n        confirmMdpOk = true;\r\n        setConfirmMdpError(false);\r\n      } else {\r\n        confirmMdpOk = false;\r\n        setConfirmMdpError(true);\r\n      }\r\n    }\r\n\r\n    let result = telOk && nomOk && mdpOk && confirmMdpOk;\r\n\r\n    if (result) {\r\n      setErrorServer(true)\r\n      if (seConnecter) {\r\n        dispatch(\r\n          authentifierAction(\r\n            {\r\n              telephone: informations.telephone,\r\n              motDePasse: informations.motDePasse,\r\n            },\r\n            history\r\n          )\r\n        );\r\n      } else {\r\n        dispatch(\r\n          inscrireAction({ ...informations, dateCreation: new Date() }, history)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handelClassChanges = () => {\r\n    if (slideClass === null) {\r\n      setSlideClass(classes.sliderAnimatedLeftToRight);\r\n    } else {\r\n      if (slideClass === classes.sliderAnimatedRightToLeft) {\r\n        setSlideClass(classes.sliderAnimatedLeftToRight);\r\n      } else {\r\n        setSlideClass(classes.sliderAnimatedRightToLeft);\r\n      }\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setSeconnecter(!seConnecter);\r\n    }, 750);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container} id=\"container\">\r\n      <div className={`${classes.slider} ${slideClass}`}>\r\n        <div className={classes.slideText}>\r\n          <h2> {seConnecter ? \"Bienvenue\" : \"Comment vas-tu\"}</h2>\r\n          <p className={classes.TextP} >\r\n            {seConnecter\r\n              ? \"venez avec nous en enfer et cree un compte \"\r\n              : \"vous etes deja inscrit , alors connectez vous \"}\r\n          </p>\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={handelClassChanges}\r\n          className={classes.bouton}\r\n        >\r\n          {seConnecter ? \"inscription\" : \"connexion\"}\r\n        </Button>\r\n      </div>\r\n      <div className={classes.insciptionPart}>\r\n        <Typography className={classes.titreInscrption}>\r\n          {seConnecter ? \"connectez-vous\" : \"Inscrivez-vous\"}\r\n        </Typography>\r\n        <form className={classes.inscForm} onSubmit={handelSubmit}>\r\n          <div\r\n            className={\r\n              seConnecter ? classes.InputsdivAuth : classes.InputdivInsc\r\n            }\r\n          >\r\n            {!seConnecter && (\r\n              <NewInput\r\n                name=\"fullName\"\r\n                label=\"   full Name\"\r\n                handelChange={handelChange}\r\n                type=\"text\"\r\n                error={nomError}\r\n                //  helperText={nomError ?  helperName : null}\r\n                helperText={helperName}\r\n              />\r\n            )}\r\n            <NewInput\r\n              name=\"telephone\"\r\n              label=\"   Email\"\r\n              handelChange={handelChange}\r\n              type=\"text\"\r\n              error={telError}\r\n              //  helperText={telError ? helperTel : null}\r\n              helperText={helperTel}\r\n            />\r\n            <div className={classes.forgotPassword}>\r\n              <NewInput\r\n                name=\"motDePasse\"\r\n                label=\"   Mot de passe \"\r\n                handelChange={handelChange}\r\n                error={mdpError}\r\n                type=\"password\"\r\n                //  helperText={mdpError ?  helperMdp : null}\r\n                helperText={helperMdp}\r\n              />\r\n\r\n              {seConnecter && (\r\n                <button\r\n                  type=\"button\"\r\n                  variant=\"text\"\r\n                  style={{\r\n                    fontSize: \"11\",\r\n                    color: \"black\",\r\n                    background: \"#fff\",\r\n                    marginTop: \"5px\",\r\n                    padding: 5,\r\n                    borderRadius: \"8px\",\r\n                    transform: \"translateY(5px)\",\r\n                    justifyContent:\"flex-end\",\r\n                    alignItems:\"flex-end\",\r\n                    display:\"flex\"\r\n                  }}\r\n                >\r\n                  mot de passe oubliÃ©\r\n                </button>\r\n              )}\r\n            </div>\r\n            {!seConnecter && (\r\n              <div className={classes.confirmMdp}>\r\n                <NewInput\r\n                  name=\"confirmedPassword\"\r\n                  label=\"   Confirmation mot de passe\"\r\n                  type=\"password\"\r\n                  handelChange={handelChange}\r\n                  error={confirmMdpError}\r\n                  // helperText={confirmMdpError ? helperConfirmPassword : null}\r\n                  helperText={helperConfirmPassword}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <Button variant=\"contained\" className={classes.bouton} type=\"submit\">\r\n            Envoyer\r\n          </Button>\r\n        </form>\r\n         \r\n         { errorServer ? \r\n         <p style={{color:'red'}}>{ selector.userReducer.erreur}</p>\r\n         : null\r\n         }\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Formulaire;\r\n// devlopor\r\n"]},"metadata":{},"sourceType":"module"}