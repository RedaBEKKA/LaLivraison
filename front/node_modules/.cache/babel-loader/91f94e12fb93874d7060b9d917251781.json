{"ast":null,"code":"import { inscrireUser, authentifierUser } from \"../../api\"; // action creators\n\nexport const inscrireAction = (donnee, history) => async dispatch => {\n  try {\n    console.log(\"ACTION INSCR\");\n    const {\n      data\n    } = await inscrireUser(donnee);\n    console.log(data);\n    let action;\n\n    if (data.message) {\n      console.log(data.message);\n      action = {\n        type: \"AUTH_ERROR\",\n        payload: data.message\n      };\n      dispatch(action);\n    } else {\n      console.log(\"data\");\n      action = {\n        type: \"AUTH\",\n        payload: data\n      };\n      dispatch(action);\n    }\n\n    history.push(\"/\"); // ca c'est bien  dont work\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const authentifierAction = (donnee, history) => async dispatch => {\n  try {\n    console.log(\"ACTION Auth\");\n    const {\n      data\n    } = await authentifierUser(donnee);\n    let action;\n\n    if (data.error) {\n      action = {\n        type: \"AUTH_ERROR\",\n        payload: data.error\n      };\n      dispatch(action);\n    } else {\n      action = {\n        type: \"AUTH\",\n        payload: data\n      };\n      dispatch(action);\n    }\n\n    history.push(\"/\");\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const logoutAction = history => async dispatch => {\n  console.log(\"logoutAction\");\n  localStorage.clear();\n  dispatch({\n    type: \"LOGOUT\"\n  });\n  history.push(\"/\");\n}; // export const dispatchLogin = () => {\n//   return {\n//       type: ACTIONS.LOGIN\n//   }\n// }","map":{"version":3,"sources":["C:/Users/User/Desktop/BigNova Deliv/LaLivraison/front/src/redux/actions/user.js"],"names":["inscrireUser","authentifierUser","inscrireAction","donnee","history","dispatch","console","log","data","action","message","type","payload","push","error","authentifierAction","logoutAction","localStorage","clear"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,WAA/C,C,CACA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB,MAAOC,QAAP,IAAoB;AACrE,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,YAAY,CAACG,MAAD,CAAnC;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,QAAIC,MAAJ;;AACA,QAAID,IAAI,CAACE,OAAT,EAAkB;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACE,OAAjB;AACAD,MAAAA,MAAM,GAAG;AAAEE,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,OAAO,EAAEJ,IAAI,CAACE;AAApC,OAAT;AACAL,MAAAA,QAAQ,CAACI,MAAD,CAAR;AAED,KALD,MAKO;AACLH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAE,MAAAA,MAAM,GAAG;AAAEE,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,OAAO,EAAEJ;AAAzB,OAAT;AACAH,MAAAA,QAAQ,CAACI,MAAD,CAAR;AACC;;AAEHL,IAAAA,OAAO,CAACS,IAAR,CAAa,GAAb,EAlBE,CAkBiB;AACpB,GAnBD,CAmBE,OAAOC,KAAP,EAAc;AACdR,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD;AACF,CAvBM;AAyBP,OAAO,MAAMC,kBAAkB,GAAG,CAACZ,MAAD,EAASC,OAAT,KAAqB,MAAOC,QAAP,IAAoB;AACzE,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,gBAAgB,CAACE,MAAD,CAAvC;AACA,QAAIM,MAAJ;;AAEA,QAAGD,IAAI,CAACM,KAAR,EAAc;AAEZL,MAAAA,MAAM,GAAG;AAAEE,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,OAAO,EAAEJ,IAAI,CAACM;AAApC,OAAT;AACAT,MAAAA,QAAQ,CAACI,MAAD,CAAR;AACD,KAJD,MAIM;AACJA,MAAAA,MAAM,GAAG;AAAEE,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,OAAO,EAAEJ;AAAzB,OAAT;AACAH,MAAAA,QAAQ,CAACI,MAAD,CAAR;AACD;;AAEDL,IAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD,GAhBD,CAgBE,OAAOC,KAAP,EAAc;AACdR,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD;AACF,CApBM;AAsBP,OAAO,MAAME,YAAY,GAAIZ,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAU,EAAAA,YAAY,CAACC,KAAb;AACAb,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACAP,EAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD,CALM,C,CAQP;AACA;AACA;AACA;AACA","sourcesContent":["import { inscrireUser, authentifierUser } from \"../../api\";\r\n// action creators\r\nexport const inscrireAction = (donnee, history) => async (dispatch) => {\r\n  try {\r\n    console.log(\"ACTION INSCR\");\r\n    const { data } = await inscrireUser(donnee);\r\n\r\n    console.log(data);\r\n\r\n    let action;\r\n    if (data.message) {\r\n      console.log(data.message);\r\n      action = { type: \"AUTH_ERROR\", payload: data.message };\r\n      dispatch(action);\r\n\r\n    } else {\r\n      console.log(\"data\");\r\n      action = { type: \"AUTH\", payload: data };\r\n      dispatch(action);\r\n      }\r\n\r\n    history.push(\"/\"); // ca c'est bien  dont work\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const authentifierAction = (donnee, history) => async (dispatch) => {\r\n  try {\r\n    console.log(\"ACTION Auth\");\r\n\r\n    const { data } = await authentifierUser(donnee);\r\n    let action ; \r\n\r\n    if(data.error){\r\n      \r\n      action = { type: \"AUTH_ERROR\", payload: data.error};\r\n      dispatch(action);\r\n    }else {\r\n      action = { type: \"AUTH\", payload: data };\r\n      dispatch(action);\r\n    }\r\n\r\n    history.push(\"/\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const logoutAction = (history) => async (dispatch) => {\r\n  console.log(\"logoutAction\");\r\n  localStorage.clear();\r\n  dispatch({ type: \"LOGOUT\" });\r\n  history.push(\"/\");\r\n};\r\n\r\n\r\n// export const dispatchLogin = () => {\r\n//   return {\r\n//       type: ACTIONS.LOGIN\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}