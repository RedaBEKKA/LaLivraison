{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BigNova Deliv\\\\LaLivraison\\\\front\\\\src\\\\component\\\\newBarreMenu\\\\shinBarreMenu.js\",\n    _s = $RefreshSig$();\n\nimport BoutonSignUp from \"../newBarreMenu/BoutonSignUp\";\nimport \"./menu.css\";\nimport Search from \"../BarreDeRecherche/Search\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { AppBar, useMediaQuery, Collapse, makeStyles, Toolbar, Avatar, Button } from \"@material-ui/core\";\nimport ShinMenu from \"./shinMenu\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => {\n  return {\n    vide: {\n      /**j ai de besoin de cette classes vide  */\n    },\n    appBarInitial: {\n      padding: 0,\n      width: \"100%\",\n      height: 80,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      position: \"fixed\",\n      background: \"#fcd\"\n    },\n    animatetransParentToWhite: {\n      animation: `transParentToWhite  linear `,\n      animationDuration: \"500ms\",\n      height: 90,\n      backgroundColor: \"white\"\n    },\n    animatewhiteToTransparent: {\n      animation: `whiteToTransparent  linear `,\n      animationDuration: \"500ms\",\n      height: 90\n    },\n    \"@global\": {\n      \"@keyframes transParentToWhite\": {\n        \"  0% \": {\n          backgroundColor: \"transparent\"\n        },\n        \"100% \": {\n          backgroundColor: \"white\"\n        }\n      },\n      \"@keyframes whiteToTransparent\": {\n        \"  0% \": {\n          backgroundColor: \"white\"\n        },\n        \"100% \": {\n          backgroundColor: \"transparent\"\n        }\n      }\n    },\n    menuBarre: {\n      width: \"97%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      margin: \"auto\"\n    },\n    BtnSignUp: {\n      backgroundColor: \"red !important\",\n      [theme.breakpoints.down(\"xs\")]: {\n        display: \"none\"\n      }\n    },\n    nom_profil: {\n      marginLeft: '15px',\n      color: 'red',\n      [theme.breakpoints.down(\"sm\")]: {\n        fontSize: '14px',\n        color: 'black'\n      }\n    }\n  };\n});\n\nconst ShinBarreMenu = ({}) => {\n  _s();\n\n  const classes = useStyles();\n  const [fadeAnimation, setFadeAnimation] = useState(false);\n  const [animateChampText, setAnimateChampText] = useState(false);\n  const [animateAppBar, setAnimateAppBar] = useState(classes.vide);\n  const [nomLogo, setNomLogo] = useState(\"nomApp\");\n  const mediaquery = useMediaQuery(\"(max-width:600px)\");\n  const auth = useSelector(state => state.auth);\n  console.log(`auth`, auth);\n  const {\n    user,\n    isLogged\n  } = auth;\n\n  const userLink = () => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 10\n        }, this), \" \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  };\n\n  const scroller = () => {\n    if (window.pageYOffset > 50) {\n      setAnimateAppBar(classes.animatetransParentToWhite);\n      setFadeAnimation(true);\n      setNomLogo(\"nomAppBlack\");\n    } else {\n      if (animateAppBar === classes.animatetransParentToWhite) {\n        setAnimateAppBar(classes.animatewhiteToTransparent);\n      }\n\n      setFadeAnimation(false);\n      setNomLogo(\"nomApp\");\n    }\n\n    if (window.pageYOffset > 600) {\n      setAnimateChampText(true);\n    } else {\n      setAnimateChampText(false);\n    }\n  };\n\n  window.addEventListener(\"scroll\", scroller);\n  const [User, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const logout = () => {\n    dispatch({\n      type: \"LOGOUT\"\n    });\n    history.push(\"/\");\n    setUser(null);\n  }; // useEffect(() => {\n  //   const token = User?.token;\n  //   if (token) {\n  //     const decodedToken = decode(token);\n  //     if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n  //   }\n  //   setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  // }, [location]);\n\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    className: `${animateAppBar} ${classes.appBarInitial} `,\n    elevation: 0,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.menuBarre,\n      children: [/*#__PURE__*/_jsxDEV(ShinMenu, {\n        nomLogo: nomLogo,\n        User: User,\n        Logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"champTextContainer\",\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: animateChampText,\n          direction: \"up\",\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            divClassName: \"rechercheMenu\",\n            inputClassName: \"inputMenu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), isLogged ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: 'row',\n          alignItems: 'center',\n          width: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.purple,\n          alt: isLogged === null || isLogged === void 0 ? void 0 : isLogged.User.name,\n          src: null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(BoutonSignUp, {\n        nomClass: \"signUpBtn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShinBarreMenu, \"/cSQwbWrNJb50zlH0IMnoYiuREw=\", false, function () {\n  return [useStyles, useMediaQuery, useSelector, useDispatch, useLocation, useHistory];\n});\n\n_c = ShinBarreMenu;\nexport default ShinBarreMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShinBarreMenu\");","map":{"version":3,"sources":["C:/Users/User/Desktop/BigNova Deliv/LaLivraison/front/src/component/newBarreMenu/shinBarreMenu.js"],"names":["BoutonSignUp","Search","React","useState","useEffect","useSelector","axios","AppBar","useMediaQuery","Collapse","makeStyles","Toolbar","Avatar","Button","ShinMenu","Link","useHistory","useLocation","useDispatch","decode","useStyles","theme","vide","appBarInitial","padding","width","height","display","flexDirection","justifyContent","position","background","animatetransParentToWhite","animation","animationDuration","backgroundColor","animatewhiteToTransparent","menuBarre","alignItems","margin","BtnSignUp","breakpoints","down","nom_profil","marginLeft","color","fontSize","ShinBarreMenu","classes","fadeAnimation","setFadeAnimation","animateChampText","setAnimateChampText","animateAppBar","setAnimateAppBar","nomLogo","setNomLogo","mediaquery","auth","state","console","log","user","isLogged","userLink","avatar","name","scroller","window","pageYOffset","addEventListener","User","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","logout","type","push","purple"],"mappings":"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","sourcesContent":["import BoutonSignUp from \"../newBarreMenu/BoutonSignUp\";\r\nimport \"./menu.css\";\r\nimport Search from \"../BarreDeRecherche/Search\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AppBar,\r\n  useMediaQuery,\r\n  Collapse,\r\n  makeStyles,\r\n  Toolbar,\r\n  Avatar,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport ShinMenu from \"./shinMenu\";\r\n\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport decode from \"jwt-decode\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    vide: {\r\n      /**j ai de besoin de cette classes vide  */\r\n    },\r\n    appBarInitial: {\r\n      padding: 0,\r\n      width: \"100%\",\r\n      height: 80,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      position: \"fixed\",\r\n      background: \"#fcd\",\r\n      \r\n    },\r\n    animatetransParentToWhite: {\r\n      animation: `transParentToWhite  linear `,\r\n      animationDuration: \"500ms\",\r\n      height: 90,\r\n      backgroundColor: \"white\",\r\n    },\r\n    animatewhiteToTransparent: {\r\n      animation: `whiteToTransparent  linear `,\r\n      animationDuration: \"500ms\",\r\n      height: 90,\r\n    },\r\n\r\n    \"@global\": {\r\n      \"@keyframes transParentToWhite\": {\r\n        \"  0% \": { backgroundColor: \"transparent\" },\r\n        \"100% \": { backgroundColor: \"white\" },\r\n      },\r\n      \"@keyframes whiteToTransparent\": {\r\n        \"  0% \": { backgroundColor: \"white\" },\r\n        \"100% \": { backgroundColor: \"transparent\" },\r\n      },\r\n    },\r\n    menuBarre: {\r\n      width: \"97%\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      margin: \"auto\",\r\n    },\r\n    BtnSignUp: {\r\n      backgroundColor: \"red !important\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n\r\n    nom_profil: {\r\n\r\n      marginLeft: '15px',\r\n      color: 'red',\r\n\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        fontSize: '14px',\r\n        color: 'black'\r\n      },\r\n\r\n    },\r\n  };\r\n});\r\n\r\nconst ShinBarreMenu = ({ }) => {\r\n  const classes = useStyles();\r\n  const [fadeAnimation, setFadeAnimation] = useState(false);\r\n  const [animateChampText, setAnimateChampText] = useState(false);\r\n  const [animateAppBar, setAnimateAppBar] = useState(classes.vide);\r\n  const [nomLogo, setNomLogo] = useState(\"nomApp\");\r\n  const mediaquery = useMediaQuery(\"(max-width:600px)\");\r\n  const auth = useSelector(state => state.auth)\r\n  console.log(`auth`, auth)\r\n  const { user, isLogged } = auth\r\n\r\n  const userLink = () => {\r\n    return (\r\n      <li>\r\n        <Link >\r\n         <img src={user.avatar} alt=''/> {user.name}\r\n        </Link>\r\n      </li>\r\n    )\r\n  }\r\n  const scroller = () => {\r\n    if (window.pageYOffset > 50) {\r\n      setAnimateAppBar(classes.animatetransParentToWhite);\r\n      setFadeAnimation(true);\r\n      setNomLogo(\"nomAppBlack\");\r\n    } else {\r\n      if (animateAppBar === classes.animatetransParentToWhite) {\r\n        setAnimateAppBar(classes.animatewhiteToTransparent);\r\n      }\r\n\r\n      setFadeAnimation(false);\r\n      setNomLogo(\"nomApp\");\r\n    }\r\n\r\n    if (window.pageYOffset > 600) {\r\n      setAnimateChampText(true);\r\n    } else {\r\n      setAnimateChampText(false);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", scroller);\r\n\r\n  const [User, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    dispatch({ type: \"LOGOUT\" });\r\n\r\n    history.push(\"/\");\r\n\r\n    setUser(null);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const token = User?.token;\r\n\r\n  //   if (token) {\r\n  //     const decodedToken = decode(token);\r\n\r\n  //     if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n  //   }\r\n\r\n  //   setUser(JSON.parse(localStorage.getItem(\"profile\")));\r\n  // }, [location]);\r\n\r\n  return (\r\n    <AppBar\r\n      className={`${animateAppBar} ${classes.appBarInitial} `}\r\n      elevation={0}\r\n    >\r\n      <Toolbar className={classes.menuBarre}>\r\n        <ShinMenu nomLogo={nomLogo} User={User} Logout={logout} />\r\n\r\n        <div id=\"champTextContainer\">\r\n          {\r\n            <Collapse in={animateChampText} direction=\"up\">\r\n              <Search divClassName=\"rechercheMenu\" inputClassName=\"inputMenu\" />\r\n            </Collapse>\r\n          }\r\n        </div>\r\n\r\n        {isLogged? (\r\n          <div style={{ display: \"flex\", flexDirection: 'row', alignItems: 'center', width: 'auto' }}>\r\n            <Avatar\r\n              className={classes.purple}\r\n              alt={isLogged?.User.name}\r\n              src={null}\r\n            >\r\n              {/* {User?.result.fullName.charAt(0)} */}\r\n            </Avatar>\r\n            {/* <div className={classes.nom_profil}> {User?.result.fullName} </div> */}\r\n\r\n            {/* {mediaquery ? null : (\r\n              <Button onClick={logout} style={{ backgroundColor: \"black\", color: 'white', marginLeft: '15px', fontSize: '15px', textTransform: 'none' }}>\r\n                {\" \"}\r\n                se deconnecter{\" \"}\r\n              </Button>\r\n            )} */}\r\n          </div>\r\n        ) : (\r\n          <BoutonSignUp nomClass=\"signUpBtn\" />\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default ShinBarreMenu;\r\n"]},"metadata":{},"sourceType":"module"}