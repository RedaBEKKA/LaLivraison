{"ast":null,"code":"export const isEmpty = value => {\n  if (!value) return true;\n  return false;\n};\nexport const isEmail = email => {\n  // eslint-disable-next-line\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n};\nexport const isPhone = telephone => {\n  const te = /(0|\\+213)[5-7]([0-9]{2}){4}$/;\n  return te.test(telephone);\n};\nexport const isLength = password => {\n  if (password.length < 6) return true;\n  return false;\n};\nexport const isMatch = (password, cf_password) => {\n  if (password === cf_password) return true;\n  return false;\n};\nexport const isName = fullName => {\n  const te = /^([a-zA-Z]+[ ]?|[a-zA-Z]+['-]?[])+$/;\n  return te.test(fullName);\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/BigNova Deliv/LaLivraison/front/src/utils/validation/Validation.js"],"names":["isEmpty","value","isEmail","email","re","test","isPhone","telephone","te","isLength","password","length","isMatch","cf_password","isName","fullName"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAGC,KAAK,IAAI;AAC5B,MAAG,CAACA,KAAJ,EAAW,OAAO,IAAP;AACX,SAAO,KAAP;AACH,CAHM;AAKP,OAAO,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAC5B;AACA,QAAMC,EAAE,GAAG,2JAAX;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQF,KAAR,CAAP;AACH,CAJM;AAKP,OAAO,MAAMG,OAAO,GAAGC,SAAS,IAAI;AAEhC,QAAMC,EAAE,GAAG,8BAAX;AACA,SAAOA,EAAE,CAACH,IAAH,CAAQE,SAAR,CAAP;AACH,CAJM;AAMP,OAAO,MAAME,QAAQ,GAAGC,QAAQ,IAAI;AAChC,MAAGA,QAAQ,CAACC,MAAT,GAAkB,CAArB,EAAwB,OAAO,IAAP;AACxB,SAAO,KAAP;AACH,CAHM;AAKP,OAAO,MAAMC,OAAO,GAAG,CAACF,QAAD,EAAWG,WAAX,KAA2B;AAC9C,MAAGH,QAAQ,KAAKG,WAAhB,EAA6B,OAAO,IAAP;AAC7B,SAAO,KAAP;AACH,CAHM;AAOP,OAAO,MAAMC,MAAM,GAAGC,QAAQ,IAAI;AAE9B,QAAMP,EAAE,GAAG,qCAAX;AACA,SAAOA,EAAE,CAACH,IAAH,CAAQU,QAAR,CAAP;AACH,CAJM","sourcesContent":["export const isEmpty = value => {\r\n    if(!value) return true\r\n    return false\r\n}\r\n\r\nexport const isEmail = email => {\r\n    // eslint-disable-next-line\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\nexport const isPhone = telephone => {\r\n    \r\n    const te = /(0|\\+213)[5-7]([0-9]{2}){4}$/;\r\n    return te.test(telephone);\r\n}\r\n\r\nexport const isLength = password => {\r\n    if(password.length < 6) return true\r\n    return false\r\n}\r\n\r\nexport const isMatch = (password, cf_password) => {\r\n    if(password === cf_password) return true\r\n    return false\r\n}\r\n\r\n\r\n\r\nexport const isName = fullName => {\r\n    \r\n    const te = /^([a-zA-Z]+[ ]?|[a-zA-Z]+['-]?[])+$/;\r\n    return te.test(fullName);\r\n}"]},"metadata":{},"sourceType":"module"}